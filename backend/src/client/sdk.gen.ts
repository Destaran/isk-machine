// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from '@hey-api/client-axios';
import type {
  GetAlliancesData,
  GetAlliancesResponse,
  GetAlliancesError,
  GetAlliancesAllianceIdData,
  GetAlliancesAllianceIdResponse,
  GetAlliancesAllianceIdError,
  GetAlliancesAllianceIdContactsData,
  GetAlliancesAllianceIdContactsResponse,
  GetAlliancesAllianceIdContactsError,
  GetAlliancesAllianceIdContactsLabelsData,
  GetAlliancesAllianceIdContactsLabelsResponse,
  GetAlliancesAllianceIdContactsLabelsError,
  GetAlliancesAllianceIdCorporationsData,
  GetAlliancesAllianceIdCorporationsResponse,
  GetAlliancesAllianceIdCorporationsError,
  GetAlliancesAllianceIdIconsData,
  GetAlliancesAllianceIdIconsResponse,
  GetAlliancesAllianceIdIconsError,
  PostCharactersAffiliationData,
  PostCharactersAffiliationResponse,
  PostCharactersAffiliationError,
  GetCharactersCharacterIdData,
  GetCharactersCharacterIdResponse,
  GetCharactersCharacterIdError,
  GetCharactersCharacterIdAgentsResearchData,
  GetCharactersCharacterIdAgentsResearchResponse,
  GetCharactersCharacterIdAgentsResearchError,
  GetCharactersCharacterIdAssetsData,
  GetCharactersCharacterIdAssetsResponse,
  GetCharactersCharacterIdAssetsError,
  PostCharactersCharacterIdAssetsLocationsData,
  PostCharactersCharacterIdAssetsLocationsResponse,
  PostCharactersCharacterIdAssetsLocationsError,
  PostCharactersCharacterIdAssetsNamesData,
  PostCharactersCharacterIdAssetsNamesResponse,
  PostCharactersCharacterIdAssetsNamesError,
  GetCharactersCharacterIdAttributesData,
  GetCharactersCharacterIdAttributesResponse,
  GetCharactersCharacterIdAttributesError,
  GetCharactersCharacterIdBlueprintsData,
  GetCharactersCharacterIdBlueprintsResponse,
  GetCharactersCharacterIdBlueprintsError,
  GetCharactersCharacterIdCalendarData,
  GetCharactersCharacterIdCalendarResponse,
  GetCharactersCharacterIdCalendarError,
  GetCharactersCharacterIdCalendarEventIdData,
  GetCharactersCharacterIdCalendarEventIdResponse,
  GetCharactersCharacterIdCalendarEventIdError,
  PutCharactersCharacterIdCalendarEventIdData,
  PutCharactersCharacterIdCalendarEventIdError,
  GetCharactersCharacterIdCalendarEventIdAttendeesData,
  GetCharactersCharacterIdCalendarEventIdAttendeesResponse,
  GetCharactersCharacterIdCalendarEventIdAttendeesError,
  GetCharactersCharacterIdClonesData,
  GetCharactersCharacterIdClonesResponse,
  GetCharactersCharacterIdClonesError,
  DeleteCharactersCharacterIdContactsData,
  DeleteCharactersCharacterIdContactsError,
  GetCharactersCharacterIdContactsData,
  GetCharactersCharacterIdContactsResponse,
  GetCharactersCharacterIdContactsError,
  PostCharactersCharacterIdContactsData,
  PostCharactersCharacterIdContactsResponse,
  PostCharactersCharacterIdContactsError,
  PutCharactersCharacterIdContactsData,
  PutCharactersCharacterIdContactsError,
  GetCharactersCharacterIdContactsLabelsData,
  GetCharactersCharacterIdContactsLabelsResponse,
  GetCharactersCharacterIdContactsLabelsError,
  GetCharactersCharacterIdContractsData,
  GetCharactersCharacterIdContractsResponse,
  GetCharactersCharacterIdContractsError,
  GetCharactersCharacterIdContractsContractIdBidsData,
  GetCharactersCharacterIdContractsContractIdBidsResponse,
  GetCharactersCharacterIdContractsContractIdBidsError,
  GetCharactersCharacterIdContractsContractIdItemsData,
  GetCharactersCharacterIdContractsContractIdItemsResponse,
  GetCharactersCharacterIdContractsContractIdItemsError,
  GetCharactersCharacterIdCorporationhistoryData,
  GetCharactersCharacterIdCorporationhistoryResponse,
  GetCharactersCharacterIdCorporationhistoryError,
  PostCharactersCharacterIdCspaData,
  PostCharactersCharacterIdCspaResponse,
  PostCharactersCharacterIdCspaError,
  GetCharactersCharacterIdFatigueData,
  GetCharactersCharacterIdFatigueResponse,
  GetCharactersCharacterIdFatigueError,
  GetCharactersCharacterIdFittingsData,
  GetCharactersCharacterIdFittingsResponse,
  GetCharactersCharacterIdFittingsError,
  PostCharactersCharacterIdFittingsData,
  PostCharactersCharacterIdFittingsResponse,
  PostCharactersCharacterIdFittingsError,
  DeleteCharactersCharacterIdFittingsFittingIdData,
  DeleteCharactersCharacterIdFittingsFittingIdError,
  GetCharactersCharacterIdFleetData,
  GetCharactersCharacterIdFleetResponse,
  GetCharactersCharacterIdFleetError,
  GetCharactersCharacterIdFwStatsData,
  GetCharactersCharacterIdFwStatsResponse,
  GetCharactersCharacterIdFwStatsError,
  GetCharactersCharacterIdImplantsData,
  GetCharactersCharacterIdImplantsResponse,
  GetCharactersCharacterIdImplantsError,
  GetCharactersCharacterIdIndustryJobsData,
  GetCharactersCharacterIdIndustryJobsResponse,
  GetCharactersCharacterIdIndustryJobsError,
  GetCharactersCharacterIdKillmailsRecentData,
  GetCharactersCharacterIdKillmailsRecentResponse,
  GetCharactersCharacterIdKillmailsRecentError,
  GetCharactersCharacterIdLocationData,
  GetCharactersCharacterIdLocationResponse,
  GetCharactersCharacterIdLocationError,
  GetCharactersCharacterIdLoyaltyPointsData,
  GetCharactersCharacterIdLoyaltyPointsResponse,
  GetCharactersCharacterIdLoyaltyPointsError,
  GetCharactersCharacterIdMailData,
  GetCharactersCharacterIdMailResponse,
  GetCharactersCharacterIdMailError,
  PostCharactersCharacterIdMailData,
  PostCharactersCharacterIdMailResponse,
  PostCharactersCharacterIdMailError,
  GetCharactersCharacterIdMailLabelsData,
  GetCharactersCharacterIdMailLabelsResponse,
  GetCharactersCharacterIdMailLabelsError,
  PostCharactersCharacterIdMailLabelsData,
  PostCharactersCharacterIdMailLabelsResponse,
  PostCharactersCharacterIdMailLabelsError,
  DeleteCharactersCharacterIdMailLabelsLabelIdData,
  DeleteCharactersCharacterIdMailLabelsLabelIdError,
  GetCharactersCharacterIdMailListsData,
  GetCharactersCharacterIdMailListsResponse,
  GetCharactersCharacterIdMailListsError,
  DeleteCharactersCharacterIdMailMailIdData,
  DeleteCharactersCharacterIdMailMailIdError,
  GetCharactersCharacterIdMailMailIdData,
  GetCharactersCharacterIdMailMailIdResponse,
  GetCharactersCharacterIdMailMailIdError,
  PutCharactersCharacterIdMailMailIdData,
  PutCharactersCharacterIdMailMailIdError,
  GetCharactersCharacterIdMedalsData,
  GetCharactersCharacterIdMedalsResponse,
  GetCharactersCharacterIdMedalsError,
  GetCharactersCharacterIdMiningData,
  GetCharactersCharacterIdMiningResponse,
  GetCharactersCharacterIdMiningError,
  GetCharactersCharacterIdNotificationsData,
  GetCharactersCharacterIdNotificationsResponse,
  GetCharactersCharacterIdNotificationsError,
  GetCharactersCharacterIdNotificationsContactsData,
  GetCharactersCharacterIdNotificationsContactsResponse,
  GetCharactersCharacterIdNotificationsContactsError,
  GetCharactersCharacterIdOnlineData,
  GetCharactersCharacterIdOnlineResponse,
  GetCharactersCharacterIdOnlineError,
  GetCharactersCharacterIdOrdersData,
  GetCharactersCharacterIdOrdersResponse,
  GetCharactersCharacterIdOrdersError,
  GetCharactersCharacterIdOrdersHistoryData,
  GetCharactersCharacterIdOrdersHistoryResponse,
  GetCharactersCharacterIdOrdersHistoryError,
  GetCharactersCharacterIdPlanetsData,
  GetCharactersCharacterIdPlanetsResponse,
  GetCharactersCharacterIdPlanetsError,
  GetCharactersCharacterIdPlanetsPlanetIdData,
  GetCharactersCharacterIdPlanetsPlanetIdResponse,
  GetCharactersCharacterIdPlanetsPlanetIdError,
  GetCharactersCharacterIdPortraitData,
  GetCharactersCharacterIdPortraitResponse,
  GetCharactersCharacterIdPortraitError,
  GetCharactersCharacterIdRolesData,
  GetCharactersCharacterIdRolesResponse,
  GetCharactersCharacterIdRolesError,
  GetCharactersCharacterIdSearchData,
  GetCharactersCharacterIdSearchResponse,
  GetCharactersCharacterIdSearchError,
  GetCharactersCharacterIdShipData,
  GetCharactersCharacterIdShipResponse,
  GetCharactersCharacterIdShipError,
  GetCharactersCharacterIdSkillqueueData,
  GetCharactersCharacterIdSkillqueueResponse,
  GetCharactersCharacterIdSkillqueueError,
  GetCharactersCharacterIdSkillsData,
  GetCharactersCharacterIdSkillsResponse,
  GetCharactersCharacterIdSkillsError,
  GetCharactersCharacterIdStandingsData,
  GetCharactersCharacterIdStandingsResponse,
  GetCharactersCharacterIdStandingsError,
  GetCharactersCharacterIdTitlesData,
  GetCharactersCharacterIdTitlesResponse,
  GetCharactersCharacterIdTitlesError,
  GetCharactersCharacterIdWalletData,
  GetCharactersCharacterIdWalletResponse,
  GetCharactersCharacterIdWalletError,
  GetCharactersCharacterIdWalletJournalData,
  GetCharactersCharacterIdWalletJournalResponse,
  GetCharactersCharacterIdWalletJournalError,
  GetCharactersCharacterIdWalletTransactionsData,
  GetCharactersCharacterIdWalletTransactionsResponse,
  GetCharactersCharacterIdWalletTransactionsError,
  GetContractsPublicBidsContractIdData,
  GetContractsPublicBidsContractIdResponse,
  GetContractsPublicBidsContractIdError,
  GetContractsPublicItemsContractIdData,
  GetContractsPublicItemsContractIdResponse,
  GetContractsPublicItemsContractIdError,
  GetContractsPublicRegionIdData,
  GetContractsPublicRegionIdResponse,
  GetContractsPublicRegionIdError,
  GetCorporationCorporationIdMiningExtractionsData,
  GetCorporationCorporationIdMiningExtractionsResponse,
  GetCorporationCorporationIdMiningExtractionsError,
  GetCorporationCorporationIdMiningObserversData,
  GetCorporationCorporationIdMiningObserversResponse,
  GetCorporationCorporationIdMiningObserversError,
  GetCorporationCorporationIdMiningObserversObserverIdData,
  GetCorporationCorporationIdMiningObserversObserverIdResponse,
  GetCorporationCorporationIdMiningObserversObserverIdError,
  GetCorporationsNpccorpsData,
  GetCorporationsNpccorpsResponse,
  GetCorporationsNpccorpsError,
  GetCorporationsCorporationIdData,
  GetCorporationsCorporationIdResponse,
  GetCorporationsCorporationIdError,
  GetCorporationsCorporationIdAlliancehistoryData,
  GetCorporationsCorporationIdAlliancehistoryResponse,
  GetCorporationsCorporationIdAlliancehistoryError,
  GetCorporationsCorporationIdAssetsData,
  GetCorporationsCorporationIdAssetsResponse,
  GetCorporationsCorporationIdAssetsError,
  PostCorporationsCorporationIdAssetsLocationsData,
  PostCorporationsCorporationIdAssetsLocationsResponse,
  PostCorporationsCorporationIdAssetsLocationsError,
  PostCorporationsCorporationIdAssetsNamesData,
  PostCorporationsCorporationIdAssetsNamesResponse,
  PostCorporationsCorporationIdAssetsNamesError,
  GetCorporationsCorporationIdBlueprintsData,
  GetCorporationsCorporationIdBlueprintsResponse,
  GetCorporationsCorporationIdBlueprintsError,
  GetCorporationsCorporationIdContactsData,
  GetCorporationsCorporationIdContactsResponse,
  GetCorporationsCorporationIdContactsError,
  GetCorporationsCorporationIdContactsLabelsData,
  GetCorporationsCorporationIdContactsLabelsResponse,
  GetCorporationsCorporationIdContactsLabelsError,
  GetCorporationsCorporationIdContainersLogsData,
  GetCorporationsCorporationIdContainersLogsResponse,
  GetCorporationsCorporationIdContainersLogsError,
  GetCorporationsCorporationIdContractsData,
  GetCorporationsCorporationIdContractsResponse,
  GetCorporationsCorporationIdContractsError,
  GetCorporationsCorporationIdContractsContractIdBidsData,
  GetCorporationsCorporationIdContractsContractIdBidsResponse,
  GetCorporationsCorporationIdContractsContractIdBidsError,
  GetCorporationsCorporationIdContractsContractIdItemsData,
  GetCorporationsCorporationIdContractsContractIdItemsResponse,
  GetCorporationsCorporationIdContractsContractIdItemsError,
  GetCorporationsCorporationIdCustomsOfficesData,
  GetCorporationsCorporationIdCustomsOfficesResponse,
  GetCorporationsCorporationIdCustomsOfficesError,
  GetCorporationsCorporationIdDivisionsData,
  GetCorporationsCorporationIdDivisionsResponse,
  GetCorporationsCorporationIdDivisionsError,
  GetCorporationsCorporationIdFacilitiesData,
  GetCorporationsCorporationIdFacilitiesResponse,
  GetCorporationsCorporationIdFacilitiesError,
  GetCorporationsCorporationIdFwStatsData,
  GetCorporationsCorporationIdFwStatsResponse,
  GetCorporationsCorporationIdFwStatsError,
  GetCorporationsCorporationIdIconsData,
  GetCorporationsCorporationIdIconsResponse,
  GetCorporationsCorporationIdIconsError,
  GetCorporationsCorporationIdIndustryJobsData,
  GetCorporationsCorporationIdIndustryJobsResponse,
  GetCorporationsCorporationIdIndustryJobsError,
  GetCorporationsCorporationIdKillmailsRecentData,
  GetCorporationsCorporationIdKillmailsRecentResponse,
  GetCorporationsCorporationIdKillmailsRecentError,
  GetCorporationsCorporationIdMedalsData,
  GetCorporationsCorporationIdMedalsResponse,
  GetCorporationsCorporationIdMedalsError,
  GetCorporationsCorporationIdMedalsIssuedData,
  GetCorporationsCorporationIdMedalsIssuedResponse,
  GetCorporationsCorporationIdMedalsIssuedError,
  GetCorporationsCorporationIdMembersData,
  GetCorporationsCorporationIdMembersResponse,
  GetCorporationsCorporationIdMembersError,
  GetCorporationsCorporationIdMembersLimitData,
  GetCorporationsCorporationIdMembersLimitResponse,
  GetCorporationsCorporationIdMembersLimitError,
  GetCorporationsCorporationIdMembersTitlesData,
  GetCorporationsCorporationIdMembersTitlesResponse,
  GetCorporationsCorporationIdMembersTitlesError,
  GetCorporationsCorporationIdMembertrackingData,
  GetCorporationsCorporationIdMembertrackingResponse,
  GetCorporationsCorporationIdMembertrackingError,
  GetCorporationsCorporationIdOrdersData,
  GetCorporationsCorporationIdOrdersResponse,
  GetCorporationsCorporationIdOrdersError,
  GetCorporationsCorporationIdOrdersHistoryData,
  GetCorporationsCorporationIdOrdersHistoryResponse,
  GetCorporationsCorporationIdOrdersHistoryError,
  GetCorporationsCorporationIdRolesData,
  GetCorporationsCorporationIdRolesResponse,
  GetCorporationsCorporationIdRolesError,
  GetCorporationsCorporationIdRolesHistoryData,
  GetCorporationsCorporationIdRolesHistoryResponse,
  GetCorporationsCorporationIdRolesHistoryError,
  GetCorporationsCorporationIdShareholdersData,
  GetCorporationsCorporationIdShareholdersResponse,
  GetCorporationsCorporationIdShareholdersError,
  GetCorporationsCorporationIdStandingsData,
  GetCorporationsCorporationIdStandingsResponse,
  GetCorporationsCorporationIdStandingsError,
  GetCorporationsCorporationIdStarbasesData,
  GetCorporationsCorporationIdStarbasesResponse,
  GetCorporationsCorporationIdStarbasesError,
  GetCorporationsCorporationIdStarbasesStarbaseIdData,
  GetCorporationsCorporationIdStarbasesStarbaseIdResponse,
  GetCorporationsCorporationIdStarbasesStarbaseIdError,
  GetCorporationsCorporationIdStructuresData,
  GetCorporationsCorporationIdStructuresResponse,
  GetCorporationsCorporationIdStructuresError,
  GetCorporationsCorporationIdTitlesData,
  GetCorporationsCorporationIdTitlesResponse,
  GetCorporationsCorporationIdTitlesError,
  GetCorporationsCorporationIdWalletsData,
  GetCorporationsCorporationIdWalletsResponse,
  GetCorporationsCorporationIdWalletsError,
  GetCorporationsCorporationIdWalletsDivisionJournalData,
  GetCorporationsCorporationIdWalletsDivisionJournalResponse,
  GetCorporationsCorporationIdWalletsDivisionJournalError,
  GetCorporationsCorporationIdWalletsDivisionTransactionsData,
  GetCorporationsCorporationIdWalletsDivisionTransactionsResponse,
  GetCorporationsCorporationIdWalletsDivisionTransactionsError,
  GetDogmaAttributesData,
  GetDogmaAttributesResponse,
  GetDogmaAttributesError,
  GetDogmaAttributesAttributeIdData,
  GetDogmaAttributesAttributeIdResponse,
  GetDogmaAttributesAttributeIdError,
  GetDogmaDynamicItemsTypeIdItemIdData,
  GetDogmaDynamicItemsTypeIdItemIdResponse,
  GetDogmaDynamicItemsTypeIdItemIdError,
  GetDogmaEffectsData,
  GetDogmaEffectsResponse,
  GetDogmaEffectsError,
  GetDogmaEffectsEffectIdData,
  GetDogmaEffectsEffectIdResponse,
  GetDogmaEffectsEffectIdError,
  GetFleetsFleetIdData,
  GetFleetsFleetIdResponse,
  GetFleetsFleetIdError,
  PutFleetsFleetIdData,
  PutFleetsFleetIdError,
  GetFleetsFleetIdMembersData,
  GetFleetsFleetIdMembersResponse,
  GetFleetsFleetIdMembersError,
  PostFleetsFleetIdMembersData,
  PostFleetsFleetIdMembersError,
  DeleteFleetsFleetIdMembersMemberIdData,
  DeleteFleetsFleetIdMembersMemberIdError,
  PutFleetsFleetIdMembersMemberIdData,
  PutFleetsFleetIdMembersMemberIdError,
  DeleteFleetsFleetIdSquadsSquadIdData,
  DeleteFleetsFleetIdSquadsSquadIdError,
  PutFleetsFleetIdSquadsSquadIdData,
  PutFleetsFleetIdSquadsSquadIdError,
  GetFleetsFleetIdWingsData,
  GetFleetsFleetIdWingsResponse,
  GetFleetsFleetIdWingsError,
  PostFleetsFleetIdWingsData,
  PostFleetsFleetIdWingsResponse,
  PostFleetsFleetIdWingsError,
  DeleteFleetsFleetIdWingsWingIdData,
  DeleteFleetsFleetIdWingsWingIdError,
  PutFleetsFleetIdWingsWingIdData,
  PutFleetsFleetIdWingsWingIdError,
  PostFleetsFleetIdWingsWingIdSquadsData,
  PostFleetsFleetIdWingsWingIdSquadsResponse,
  PostFleetsFleetIdWingsWingIdSquadsError,
  GetFwLeaderboardsData,
  GetFwLeaderboardsResponse,
  GetFwLeaderboardsError,
  GetFwLeaderboardsCharactersData,
  GetFwLeaderboardsCharactersResponse,
  GetFwLeaderboardsCharactersError,
  GetFwLeaderboardsCorporationsData,
  GetFwLeaderboardsCorporationsResponse,
  GetFwLeaderboardsCorporationsError,
  GetFwStatsData,
  GetFwStatsResponse,
  GetFwStatsError,
  GetFwSystemsData,
  GetFwSystemsResponse,
  GetFwSystemsError,
  GetFwWarsData,
  GetFwWarsResponse,
  GetFwWarsError,
  GetIncursionsData,
  GetIncursionsResponse,
  GetIncursionsError,
  GetIndustryFacilitiesData,
  GetIndustryFacilitiesResponse,
  GetIndustryFacilitiesError,
  GetIndustrySystemsData,
  GetIndustrySystemsResponse,
  GetIndustrySystemsError,
  GetInsurancePricesData,
  GetInsurancePricesResponse,
  GetInsurancePricesError,
  GetKillmailsKillmailIdKillmailHashData,
  GetKillmailsKillmailIdKillmailHashResponse,
  GetKillmailsKillmailIdKillmailHashError,
  GetLoyaltyStoresCorporationIdOffersData,
  GetLoyaltyStoresCorporationIdOffersResponse,
  GetLoyaltyStoresCorporationIdOffersError,
  GetMarketsGroupsData,
  GetMarketsGroupsResponse,
  GetMarketsGroupsError,
  GetMarketsGroupsMarketGroupIdData,
  GetMarketsGroupsMarketGroupIdResponse,
  GetMarketsGroupsMarketGroupIdError,
  GetMarketsPricesData,
  GetMarketsPricesResponse,
  GetMarketsPricesError,
  GetMarketsStructuresStructureIdData,
  GetMarketsStructuresStructureIdResponse,
  GetMarketsStructuresStructureIdError,
  GetMarketsRegionIdHistoryData,
  GetMarketsRegionIdHistoryResponse,
  GetMarketsRegionIdHistoryError,
  GetMarketsRegionIdOrdersData,
  GetMarketsRegionIdOrdersResponse,
  GetMarketsRegionIdOrdersError,
  GetMarketsRegionIdTypesData,
  GetMarketsRegionIdTypesResponse,
  GetMarketsRegionIdTypesError,
  GetRouteOriginDestinationData,
  GetRouteOriginDestinationResponse,
  GetRouteOriginDestinationError,
  GetSovereigntyCampaignsData,
  GetSovereigntyCampaignsResponse,
  GetSovereigntyCampaignsError,
  GetSovereigntyMapData,
  GetSovereigntyMapResponse,
  GetSovereigntyMapError,
  GetSovereigntyStructuresData,
  GetSovereigntyStructuresResponse,
  GetSovereigntyStructuresError,
  GetStatusData,
  GetStatusResponse,
  GetStatusError,
  PostUiAutopilotWaypointData,
  PostUiAutopilotWaypointError,
  PostUiOpenwindowContractData,
  PostUiOpenwindowContractError,
  PostUiOpenwindowInformationData,
  PostUiOpenwindowInformationError,
  PostUiOpenwindowMarketdetailsData,
  PostUiOpenwindowMarketdetailsError,
  PostUiOpenwindowNewmailData,
  PostUiOpenwindowNewmailError,
  GetUniverseAncestriesData,
  GetUniverseAncestriesResponse,
  GetUniverseAncestriesError,
  GetUniverseAsteroidBeltsAsteroidBeltIdData,
  GetUniverseAsteroidBeltsAsteroidBeltIdResponse,
  GetUniverseAsteroidBeltsAsteroidBeltIdError,
  GetUniverseBloodlinesData,
  GetUniverseBloodlinesResponse,
  GetUniverseBloodlinesError,
  GetUniverseCategoriesData,
  GetUniverseCategoriesResponse,
  GetUniverseCategoriesError,
  GetUniverseCategoriesCategoryIdData,
  GetUniverseCategoriesCategoryIdResponse,
  GetUniverseCategoriesCategoryIdError,
  GetUniverseConstellationsData,
  GetUniverseConstellationsResponse,
  GetUniverseConstellationsError,
  GetUniverseConstellationsConstellationIdData,
  GetUniverseConstellationsConstellationIdResponse,
  GetUniverseConstellationsConstellationIdError,
  GetUniverseFactionsData,
  GetUniverseFactionsResponse,
  GetUniverseFactionsError,
  GetUniverseGraphicsData,
  GetUniverseGraphicsResponse,
  GetUniverseGraphicsError,
  GetUniverseGraphicsGraphicIdData,
  GetUniverseGraphicsGraphicIdResponse,
  GetUniverseGraphicsGraphicIdError,
  GetUniverseGroupsData,
  GetUniverseGroupsResponse,
  GetUniverseGroupsError,
  GetUniverseGroupsGroupIdData,
  GetUniverseGroupsGroupIdResponse,
  GetUniverseGroupsGroupIdError,
  PostUniverseIdsData,
  PostUniverseIdsResponse,
  PostUniverseIdsError,
  GetUniverseMoonsMoonIdData,
  GetUniverseMoonsMoonIdResponse,
  GetUniverseMoonsMoonIdError,
  PostUniverseNamesData,
  PostUniverseNamesResponse,
  PostUniverseNamesError,
  GetUniversePlanetsPlanetIdData,
  GetUniversePlanetsPlanetIdResponse,
  GetUniversePlanetsPlanetIdError,
  GetUniverseRacesData,
  GetUniverseRacesResponse,
  GetUniverseRacesError,
  GetUniverseRegionsData,
  GetUniverseRegionsResponse,
  GetUniverseRegionsError,
  GetUniverseRegionsRegionIdData,
  GetUniverseRegionsRegionIdResponse,
  GetUniverseRegionsRegionIdError,
  GetUniverseSchematicsSchematicIdData,
  GetUniverseSchematicsSchematicIdResponse,
  GetUniverseSchematicsSchematicIdError,
  GetUniverseStargatesStargateIdData,
  GetUniverseStargatesStargateIdResponse,
  GetUniverseStargatesStargateIdError,
  GetUniverseStarsStarIdData,
  GetUniverseStarsStarIdResponse,
  GetUniverseStarsStarIdError,
  GetUniverseStationsStationIdData,
  GetUniverseStationsStationIdResponse,
  GetUniverseStationsStationIdError,
  GetUniverseStructuresData,
  GetUniverseStructuresResponse,
  GetUniverseStructuresError,
  GetUniverseStructuresStructureIdData,
  GetUniverseStructuresStructureIdResponse,
  GetUniverseStructuresStructureIdError,
  GetUniverseSystemJumpsData,
  GetUniverseSystemJumpsResponse,
  GetUniverseSystemJumpsError,
  GetUniverseSystemKillsData,
  GetUniverseSystemKillsResponse,
  GetUniverseSystemKillsError,
  GetUniverseSystemsData,
  GetUniverseSystemsResponse,
  GetUniverseSystemsError,
  GetUniverseSystemsSystemIdData,
  GetUniverseSystemsSystemIdResponse,
  GetUniverseSystemsSystemIdError,
  GetUniverseTypesData,
  GetUniverseTypesResponse,
  GetUniverseTypesError,
  GetUniverseTypesTypeIdData,
  GetUniverseTypesTypeIdResponse,
  GetUniverseTypesTypeIdError,
  GetWarsData,
  GetWarsResponse,
  GetWarsError,
  GetWarsWarIdData,
  GetWarsWarIdResponse,
  GetWarsWarIdError,
  GetWarsWarIdKillmailsData,
  GetWarsWarIdKillmailsResponse,
  GetWarsWarIdKillmailsError,
} from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * List all alliances
 * List all active player alliances
 *
 * ---
 * Alternate route: `/dev/alliances/`
 *
 * Alternate route: `/legacy/alliances/`
 *
 * Alternate route: `/v1/alliances/`
 *
 * Alternate route: `/v2/alliances/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getAlliances = <ThrowOnError extends boolean = false>(
  options?: Options<GetAlliancesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetAlliancesResponse,
    GetAlliancesError,
    ThrowOnError
  >({
    url: '/alliances/',
    ...options,
  });
};

/**
 * Get alliance information
 * Public information about an alliance
 *
 * ---
 * Alternate route: `/dev/alliances/{alliance_id}/`
 *
 * Alternate route: `/legacy/alliances/{alliance_id}/`
 *
 * Alternate route: `/v3/alliances/{alliance_id}/`
 *
 * Alternate route: `/v4/alliances/{alliance_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getAlliancesAllianceId = <ThrowOnError extends boolean = false>(
  options: Options<GetAlliancesAllianceIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAlliancesAllianceIdResponse,
    GetAlliancesAllianceIdError,
    ThrowOnError
  >({
    url: '/alliances/{alliance_id}/',
    ...options,
  });
};

/**
 * Get alliance contacts
 * Return contacts of an alliance
 *
 * ---
 * Alternate route: `/dev/alliances/{alliance_id}/contacts/`
 *
 * Alternate route: `/v2/alliances/{alliance_id}/contacts/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getAlliancesAllianceIdContacts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAlliancesAllianceIdContactsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAlliancesAllianceIdContactsResponse,
    GetAlliancesAllianceIdContactsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/alliances/{alliance_id}/contacts/',
    ...options,
  });
};

/**
 * Get alliance contact labels
 * Return custom labels for an alliance's contacts
 *
 * ---
 * Alternate route: `/dev/alliances/{alliance_id}/contacts/labels/`
 *
 * Alternate route: `/legacy/alliances/{alliance_id}/contacts/labels/`
 *
 * Alternate route: `/v1/alliances/{alliance_id}/contacts/labels/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getAlliancesAllianceIdContactsLabels = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAlliancesAllianceIdContactsLabelsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAlliancesAllianceIdContactsLabelsResponse,
    GetAlliancesAllianceIdContactsLabelsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/alliances/{alliance_id}/contacts/labels/',
    ...options,
  });
};

/**
 * List alliance's corporations
 * List all current member corporations of an alliance
 *
 * ---
 * Alternate route: `/dev/alliances/{alliance_id}/corporations/`
 *
 * Alternate route: `/legacy/alliances/{alliance_id}/corporations/`
 *
 * Alternate route: `/v1/alliances/{alliance_id}/corporations/`
 *
 * Alternate route: `/v2/alliances/{alliance_id}/corporations/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getAlliancesAllianceIdCorporations = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAlliancesAllianceIdCorporationsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAlliancesAllianceIdCorporationsResponse,
    GetAlliancesAllianceIdCorporationsError,
    ThrowOnError
  >({
    url: '/alliances/{alliance_id}/corporations/',
    ...options,
  });
};

/**
 * Get alliance icon
 * Get the icon urls for a alliance
 *
 * ---
 * Alternate route: `/legacy/alliances/{alliance_id}/icons/`
 *
 * Alternate route: `/v1/alliances/{alliance_id}/icons/`
 *
 * ---
 * This route expires daily at 11:05
 *
 * ---
 * [Diff of the upcoming changes](https://esi.evetech.net/diff/latest/dev/#GET-/alliances/{alliance_id}/icons/)
 */
export const getAlliancesAllianceIdIcons = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetAlliancesAllianceIdIconsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetAlliancesAllianceIdIconsResponse,
    GetAlliancesAllianceIdIconsError,
    ThrowOnError
  >({
    url: '/alliances/{alliance_id}/icons/',
    ...options,
  });
};

/**
 * Character affiliation
 * Bulk lookup of character IDs to corporation, alliance and faction
 *
 * ---
 * Alternate route: `/dev/characters/affiliation/`
 *
 * Alternate route: `/v2/characters/affiliation/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const postCharactersAffiliation = <ThrowOnError extends boolean = false>(
  options: Options<PostCharactersAffiliationData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersAffiliationResponse,
    PostCharactersAffiliationError,
    ThrowOnError
  >({
    url: '/characters/affiliation/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get character's public information
 * Public information about a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/`
 *
 * Alternate route: `/v5/characters/{character_id}/`
 *
 * ---
 * This route is cached for up to 604800 seconds
 */
export const getCharactersCharacterId = <ThrowOnError extends boolean = false>(
  options: Options<GetCharactersCharacterIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdResponse,
    GetCharactersCharacterIdError,
    ThrowOnError
  >({
    url: '/characters/{character_id}/',
    ...options,
  });
};

/**
 * Get agents research
 * Return a list of agents research information for a character. The formula for finding the current research points with an agent is: currentPoints = remainderPoints + pointsPerDay * days(currentTime - researchStartDate)
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/agents_research/`
 *
 * Alternate route: `/v2/characters/{character_id}/agents_research/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdAgentsResearch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdAgentsResearchData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdAgentsResearchResponse,
    GetCharactersCharacterIdAgentsResearchError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/agents_research/',
    ...options,
  });
};

/**
 * Get character assets
 * Return a list of the characters assets
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/assets/`
 *
 * Alternate route: `/v5/characters/{character_id}/assets/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdAssets = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdAssetsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdAssetsResponse,
    GetCharactersCharacterIdAssetsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/assets/',
    ...options,
  });
};

/**
 * Get character asset locations
 * Return locations for a set of item ids, which you can get from character assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/assets/locations/`
 *
 * Alternate route: `/v2/characters/{character_id}/assets/locations/`
 *
 */
export const postCharactersCharacterIdAssetsLocations = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCharactersCharacterIdAssetsLocationsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersCharacterIdAssetsLocationsResponse,
    PostCharactersCharacterIdAssetsLocationsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/assets/locations/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get character asset names
 * Return names for a set of item ids, which you can get from character assets endpoint. Typically used for items that can customize names, like containers or ships.
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/assets/names/`
 *
 * Alternate route: `/legacy/characters/{character_id}/assets/names/`
 *
 * Alternate route: `/v1/characters/{character_id}/assets/names/`
 *
 */
export const postCharactersCharacterIdAssetsNames = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCharactersCharacterIdAssetsNamesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersCharacterIdAssetsNamesResponse,
    PostCharactersCharacterIdAssetsNamesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/assets/names/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get character attributes
 * Return attributes of a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/attributes/`
 *
 * Alternate route: `/legacy/characters/{character_id}/attributes/`
 *
 * Alternate route: `/v1/characters/{character_id}/attributes/`
 *
 * ---
 * This route is cached for up to 120 seconds
 */
export const getCharactersCharacterIdAttributes = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdAttributesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdAttributesResponse,
    GetCharactersCharacterIdAttributesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/attributes/',
    ...options,
  });
};

/**
 * Get blueprints
 * Return a list of blueprints the character owns
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/blueprints/`
 *
 * Alternate route: `/v3/characters/{character_id}/blueprints/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdBlueprints = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdBlueprintsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdBlueprintsResponse,
    GetCharactersCharacterIdBlueprintsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/blueprints/',
    ...options,
  });
};

/**
 * List calendar event summaries
 * Get 50 event summaries from the calendar. If no from_event ID is given, the resource will return the next 50 chronological event summaries from now. If a from_event ID is specified, it will return the next 50 chronological event summaries from after that event
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/calendar/`
 *
 * Alternate route: `/legacy/characters/{character_id}/calendar/`
 *
 * Alternate route: `/v1/characters/{character_id}/calendar/`
 *
 * Alternate route: `/v2/characters/{character_id}/calendar/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getCharactersCharacterIdCalendar = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdCalendarData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdCalendarResponse,
    GetCharactersCharacterIdCalendarError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/calendar/',
    ...options,
  });
};

/**
 * Get an event
 * Get all the information for a specific event
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/calendar/{event_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/calendar/{event_id}/`
 *
 * Alternate route: `/v3/characters/{character_id}/calendar/{event_id}/`
 *
 * Alternate route: `/v4/characters/{character_id}/calendar/{event_id}/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getCharactersCharacterIdCalendarEventId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdCalendarEventIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdCalendarEventIdResponse,
    GetCharactersCharacterIdCalendarEventIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/calendar/{event_id}/',
    ...options,
  });
};

/**
 * Respond to an event
 * Set your response status to an event
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/calendar/{event_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/calendar/{event_id}/`
 *
 * Alternate route: `/v3/characters/{character_id}/calendar/{event_id}/`
 *
 * Alternate route: `/v4/characters/{character_id}/calendar/{event_id}/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const putCharactersCharacterIdCalendarEventId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PutCharactersCharacterIdCalendarEventIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    unknown,
    PutCharactersCharacterIdCalendarEventIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/calendar/{event_id}/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get attendees
 * Get all invited attendees for a given event
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/calendar/{event_id}/attendees/`
 *
 * Alternate route: `/legacy/characters/{character_id}/calendar/{event_id}/attendees/`
 *
 * Alternate route: `/v1/characters/{character_id}/calendar/{event_id}/attendees/`
 *
 * Alternate route: `/v2/characters/{character_id}/calendar/{event_id}/attendees/`
 *
 * ---
 * This route is cached for up to 600 seconds
 */
export const getCharactersCharacterIdCalendarEventIdAttendees = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCharactersCharacterIdCalendarEventIdAttendeesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdCalendarEventIdAttendeesResponse,
    GetCharactersCharacterIdCalendarEventIdAttendeesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/calendar/{event_id}/attendees/',
    ...options,
  });
};

/**
 * Get clones
 * A list of the character's clones
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/clones/`
 *
 * Alternate route: `/v3/characters/{character_id}/clones/`
 *
 * Alternate route: `/v4/characters/{character_id}/clones/`
 *
 * ---
 * This route is cached for up to 120 seconds
 */
export const getCharactersCharacterIdClones = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdClonesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdClonesResponse,
    GetCharactersCharacterIdClonesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/clones/',
    ...options,
  });
};

/**
 * Delete contacts
 * Bulk delete contacts
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contacts/`
 *
 * Alternate route: `/v2/characters/{character_id}/contacts/`
 *
 */
export const deleteCharactersCharacterIdContacts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteCharactersCharacterIdContactsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    DeleteCharactersCharacterIdContactsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    querySerializer: {
      array: {
        explode: false,
        style: 'form',
      },
    },
    url: '/characters/{character_id}/contacts/',
    ...options,
  });
};

/**
 * Get contacts
 * Return contacts of a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contacts/`
 *
 * Alternate route: `/v2/characters/{character_id}/contacts/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdContacts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdContactsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdContactsResponse,
    GetCharactersCharacterIdContactsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/contacts/',
    ...options,
  });
};

/**
 * Add contacts
 * Bulk add contacts with same settings
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contacts/`
 *
 * Alternate route: `/v2/characters/{character_id}/contacts/`
 *
 */
export const postCharactersCharacterIdContacts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCharactersCharacterIdContactsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersCharacterIdContactsResponse,
    PostCharactersCharacterIdContactsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    querySerializer: {
      array: {
        explode: false,
        style: 'form',
      },
    },
    url: '/characters/{character_id}/contacts/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Edit contacts
 * Bulk edit contacts with same settings
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contacts/`
 *
 * Alternate route: `/v2/characters/{character_id}/contacts/`
 *
 */
export const putCharactersCharacterIdContacts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PutCharactersCharacterIdContactsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    unknown,
    PutCharactersCharacterIdContactsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    querySerializer: {
      array: {
        explode: false,
        style: 'form',
      },
    },
    url: '/characters/{character_id}/contacts/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get contact labels
 * Return custom labels for a character's contacts
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contacts/labels/`
 *
 * Alternate route: `/legacy/characters/{character_id}/contacts/labels/`
 *
 * Alternate route: `/v1/characters/{character_id}/contacts/labels/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdContactsLabels = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdContactsLabelsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdContactsLabelsResponse,
    GetCharactersCharacterIdContactsLabelsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/contacts/labels/',
    ...options,
  });
};

/**
 * Get contracts
 * Returns contracts available to a character, only if the character is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is "in_progress".
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contracts/`
 *
 * Alternate route: `/legacy/characters/{character_id}/contracts/`
 *
 * Alternate route: `/v1/characters/{character_id}/contracts/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdContracts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdContractsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdContractsResponse,
    GetCharactersCharacterIdContractsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/contracts/',
    ...options,
  });
};

/**
 * Get contract bids
 * Lists bids on a particular auction contract
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contracts/{contract_id}/bids/`
 *
 * Alternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/bids/`
 *
 * Alternate route: `/v1/characters/{character_id}/contracts/{contract_id}/bids/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdContractsContractIdBids = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCharactersCharacterIdContractsContractIdBidsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdContractsContractIdBidsResponse,
    GetCharactersCharacterIdContractsContractIdBidsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/contracts/{contract_id}/bids/',
    ...options,
  });
};

/**
 * Get contract items
 * Lists items of a particular contract
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/contracts/{contract_id}/items/`
 *
 * Alternate route: `/legacy/characters/{character_id}/contracts/{contract_id}/items/`
 *
 * Alternate route: `/v1/characters/{character_id}/contracts/{contract_id}/items/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdContractsContractIdItems = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCharactersCharacterIdContractsContractIdItemsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdContractsContractIdItemsResponse,
    GetCharactersCharacterIdContractsContractIdItemsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/contracts/{contract_id}/items/',
    ...options,
  });
};

/**
 * Get corporation history
 * Get a list of all the corporations a character has been a member of
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/corporationhistory/`
 *
 * Alternate route: `/v2/characters/{character_id}/corporationhistory/`
 *
 * ---
 * This route is cached for up to 86400 seconds
 */
export const getCharactersCharacterIdCorporationhistory = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCharactersCharacterIdCorporationhistoryData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdCorporationhistoryResponse,
    GetCharactersCharacterIdCorporationhistoryError,
    ThrowOnError
  >({
    url: '/characters/{character_id}/corporationhistory/',
    ...options,
  });
};

/**
 * Calculate a CSPA charge cost
 * Takes a source character ID in the url and a set of target character ID's in the body, returns a CSPA charge cost
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/cspa/`
 *
 * Alternate route: `/v5/characters/{character_id}/cspa/`
 *
 */
export const postCharactersCharacterIdCspa = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCharactersCharacterIdCspaData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersCharacterIdCspaResponse,
    PostCharactersCharacterIdCspaError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/cspa/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get jump fatigue
 * Return a character's jump activation and fatigue information
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/fatigue/`
 *
 * Alternate route: `/v2/characters/{character_id}/fatigue/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdFatigue = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdFatigueData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdFatigueResponse,
    GetCharactersCharacterIdFatigueError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/fatigue/',
    ...options,
  });
};

/**
 * Get fittings
 * Return fittings of a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/fittings/`
 *
 * Alternate route: `/v2/characters/{character_id}/fittings/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdFittings = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdFittingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdFittingsResponse,
    GetCharactersCharacterIdFittingsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/fittings/',
    ...options,
  });
};

/**
 * Create fitting
 * Save a new fitting for a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/fittings/`
 *
 * Alternate route: `/v2/characters/{character_id}/fittings/`
 *
 */
export const postCharactersCharacterIdFittings = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCharactersCharacterIdFittingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersCharacterIdFittingsResponse,
    PostCharactersCharacterIdFittingsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/fittings/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Delete fitting
 * Delete a fitting from a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/fittings/{fitting_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/fittings/{fitting_id}/`
 *
 * Alternate route: `/v1/characters/{character_id}/fittings/{fitting_id}/`
 *
 */
export const deleteCharactersCharacterIdFittingsFittingId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteCharactersCharacterIdFittingsFittingIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    DeleteCharactersCharacterIdFittingsFittingIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/fittings/{fitting_id}/',
    ...options,
  });
};

/**
 * Get character fleet info
 * Return the fleet ID the character is in, if any.
 *
 * ---
 * Alternate route: `/legacy/characters/{character_id}/fleet/`
 *
 * Alternate route: `/v1/characters/{character_id}/fleet/`
 *
 * ---
 * This route is cached for up to 60 seconds
 *
 * ---
 * Warning: This route has an upgrade available
 *
 * ---
 * [Diff of the upcoming changes](https://esi.evetech.net/diff/latest/dev/#GET-/characters/{character_id}/fleet/)
 */
export const getCharactersCharacterIdFleet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdFleetData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdFleetResponse,
    GetCharactersCharacterIdFleetError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/fleet/',
    ...options,
  });
};

/**
 * Overview of a character involved in faction warfare
 * Statistical overview of a character involved in faction warfare
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/fw/stats/`
 *
 * Alternate route: `/legacy/characters/{character_id}/fw/stats/`
 *
 * Alternate route: `/v1/characters/{character_id}/fw/stats/`
 *
 * Alternate route: `/v2/characters/{character_id}/fw/stats/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getCharactersCharacterIdFwStats = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdFwStatsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdFwStatsResponse,
    GetCharactersCharacterIdFwStatsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/fw/stats/',
    ...options,
  });
};

/**
 * Get active implants
 * Return implants on the active clone of a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/implants/`
 *
 * Alternate route: `/legacy/characters/{character_id}/implants/`
 *
 * Alternate route: `/v1/characters/{character_id}/implants/`
 *
 * Alternate route: `/v2/characters/{character_id}/implants/`
 *
 * ---
 * This route is cached for up to 120 seconds
 */
export const getCharactersCharacterIdImplants = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdImplantsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdImplantsResponse,
    GetCharactersCharacterIdImplantsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/implants/',
    ...options,
  });
};

/**
 * List character industry jobs
 * List industry jobs placed by a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/industry/jobs/`
 *
 * Alternate route: `/legacy/characters/{character_id}/industry/jobs/`
 *
 * Alternate route: `/v1/characters/{character_id}/industry/jobs/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdIndustryJobs = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdIndustryJobsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdIndustryJobsResponse,
    GetCharactersCharacterIdIndustryJobsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/industry/jobs/',
    ...options,
  });
};

/**
 * Get a character's recent kills and losses
 * Return a list of a character's kills and losses going back 90 days
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/killmails/recent/`
 *
 * Alternate route: `/legacy/characters/{character_id}/killmails/recent/`
 *
 * Alternate route: `/v1/characters/{character_id}/killmails/recent/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCharactersCharacterIdKillmailsRecent = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdKillmailsRecentData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdKillmailsRecentResponse,
    GetCharactersCharacterIdKillmailsRecentError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/killmails/recent/',
    ...options,
  });
};

/**
 * Get character location
 * Information about the characters current location. Returns the current solar system id, and also the current station or structure ID if applicable
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/location/`
 *
 * Alternate route: `/legacy/characters/{character_id}/location/`
 *
 * Alternate route: `/v1/characters/{character_id}/location/`
 *
 * Alternate route: `/v2/characters/{character_id}/location/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getCharactersCharacterIdLocation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdLocationData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdLocationResponse,
    GetCharactersCharacterIdLocationError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/location/',
    ...options,
  });
};

/**
 * Get loyalty points
 * Return a list of loyalty points for all corporations the character has worked for
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/loyalty/points/`
 *
 * Alternate route: `/legacy/characters/{character_id}/loyalty/points/`
 *
 * Alternate route: `/v1/characters/{character_id}/loyalty/points/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdLoyaltyPoints = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdLoyaltyPointsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdLoyaltyPointsResponse,
    GetCharactersCharacterIdLoyaltyPointsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/loyalty/points/',
    ...options,
  });
};

/**
 * Return mail headers
 * Return the 50 most recent mail headers belonging to the character that match the query criteria. Queries can be filtered by label, and last_mail_id can be used to paginate backwards
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/`
 *
 * Alternate route: `/v1/characters/{character_id}/mail/`
 *
 * ---
 * This route is cached for up to 30 seconds
 */
export const getCharactersCharacterIdMail = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdMailData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdMailResponse,
    GetCharactersCharacterIdMailError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    querySerializer: {
      array: {
        explode: false,
        style: 'form',
      },
    },
    url: '/characters/{character_id}/mail/',
    ...options,
  });
};

/**
 * Send a new mail
 * Create and send a new mail
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/`
 *
 * Alternate route: `/v1/characters/{character_id}/mail/`
 *
 */
export const postCharactersCharacterIdMail = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCharactersCharacterIdMailData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersCharacterIdMailResponse,
    PostCharactersCharacterIdMailError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get mail labels and unread counts
 * Return a list of the users mail labels, unread counts for each label and a total unread count.
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/labels/`
 *
 * Alternate route: `/v3/characters/{character_id}/mail/labels/`
 *
 * ---
 * This route is cached for up to 30 seconds
 */
export const getCharactersCharacterIdMailLabels = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdMailLabelsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdMailLabelsResponse,
    GetCharactersCharacterIdMailLabelsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/labels/',
    ...options,
  });
};

/**
 * Create a mail label
 * Create a mail label
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/labels/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/labels/`
 *
 * Alternate route: `/v2/characters/{character_id}/mail/labels/`
 *
 */
export const postCharactersCharacterIdMailLabels = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCharactersCharacterIdMailLabelsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCharactersCharacterIdMailLabelsResponse,
    PostCharactersCharacterIdMailLabelsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/labels/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Delete a mail label
 * Delete a mail label
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/labels/{label_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/labels/{label_id}/`
 *
 * Alternate route: `/v1/characters/{character_id}/mail/labels/{label_id}/`
 *
 */
export const deleteCharactersCharacterIdMailLabelsLabelId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    DeleteCharactersCharacterIdMailLabelsLabelIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    DeleteCharactersCharacterIdMailLabelsLabelIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/labels/{label_id}/',
    ...options,
  });
};

/**
 * Return mailing list subscriptions
 * Return all mailing lists that the character is subscribed to
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/lists/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/lists/`
 *
 * Alternate route: `/v1/characters/{character_id}/mail/lists/`
 *
 * ---
 * This route is cached for up to 120 seconds
 */
export const getCharactersCharacterIdMailLists = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdMailListsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdMailListsResponse,
    GetCharactersCharacterIdMailListsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/lists/',
    ...options,
  });
};

/**
 * Delete a mail
 * Delete a mail
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/{mail_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`
 *
 * Alternate route: `/v1/characters/{character_id}/mail/{mail_id}/`
 *
 */
export const deleteCharactersCharacterIdMailMailId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteCharactersCharacterIdMailMailIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    DeleteCharactersCharacterIdMailMailIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/{mail_id}/',
    ...options,
  });
};

/**
 * Return a mail
 * Return the contents of an EVE mail
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/{mail_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`
 *
 * Alternate route: `/v1/characters/{character_id}/mail/{mail_id}/`
 *
 * ---
 * This route is cached for up to 30 seconds
 */
export const getCharactersCharacterIdMailMailId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdMailMailIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdMailMailIdResponse,
    GetCharactersCharacterIdMailMailIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/{mail_id}/',
    ...options,
  });
};

/**
 * Update metadata about a mail
 * Update metadata about a mail
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mail/{mail_id}/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mail/{mail_id}/`
 *
 * Alternate route: `/v1/characters/{character_id}/mail/{mail_id}/`
 *
 */
export const putCharactersCharacterIdMailMailId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PutCharactersCharacterIdMailMailIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    unknown,
    PutCharactersCharacterIdMailMailIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mail/{mail_id}/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get medals
 * Return a list of medals the character has
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/medals/`
 *
 * Alternate route: `/v2/characters/{character_id}/medals/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdMedals = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdMedalsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdMedalsResponse,
    GetCharactersCharacterIdMedalsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/medals/',
    ...options,
  });
};

/**
 * Character mining ledger
 * Paginated record of all mining done by a character for the past 30 days
 *
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/mining/`
 *
 * Alternate route: `/legacy/characters/{character_id}/mining/`
 *
 * Alternate route: `/v1/characters/{character_id}/mining/`
 *
 * ---
 * This route is cached for up to 600 seconds
 */
export const getCharactersCharacterIdMining = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdMiningData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdMiningResponse,
    GetCharactersCharacterIdMiningError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/mining/',
    ...options,
  });
};

/**
 * Get character notifications
 * Return character notifications
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/notifications/`
 *
 * Alternate route: `/v5/characters/{character_id}/notifications/`
 *
 * Alternate route: `/v6/characters/{character_id}/notifications/`
 *
 * ---
 * This route is cached for up to 600 seconds
 */
export const getCharactersCharacterIdNotifications = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdNotificationsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdNotificationsResponse,
    GetCharactersCharacterIdNotificationsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/notifications/',
    ...options,
  });
};

/**
 * Get new contact notifications
 * Return notifications about having been added to someone's contact list
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/notifications/contacts/`
 *
 * Alternate route: `/v2/characters/{character_id}/notifications/contacts/`
 *
 * ---
 * This route is cached for up to 600 seconds
 */
export const getCharactersCharacterIdNotificationsContacts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCharactersCharacterIdNotificationsContactsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdNotificationsContactsResponse,
    GetCharactersCharacterIdNotificationsContactsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/notifications/contacts/',
    ...options,
  });
};

/**
 * Get character online
 * Checks if the character is currently online
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/online/`
 *
 * Alternate route: `/v2/characters/{character_id}/online/`
 *
 * Alternate route: `/v3/characters/{character_id}/online/`
 *
 * ---
 * This route is cached for up to 60 seconds
 */
export const getCharactersCharacterIdOnline = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdOnlineData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdOnlineResponse,
    GetCharactersCharacterIdOnlineError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/online/',
    ...options,
  });
};

/**
 * List open orders from a character
 * List open market orders placed by a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/orders/`
 *
 * Alternate route: `/v2/characters/{character_id}/orders/`
 *
 * ---
 * This route is cached for up to 1200 seconds
 */
export const getCharactersCharacterIdOrders = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdOrdersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdOrdersResponse,
    GetCharactersCharacterIdOrdersError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/orders/',
    ...options,
  });
};

/**
 * List historical orders by a character
 * List cancelled and expired market orders placed by a character up to 90 days in the past.
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/orders/history/`
 *
 * Alternate route: `/legacy/characters/{character_id}/orders/history/`
 *
 * Alternate route: `/v1/characters/{character_id}/orders/history/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdOrdersHistory = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdOrdersHistoryData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdOrdersHistoryResponse,
    GetCharactersCharacterIdOrdersHistoryError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/orders/history/',
    ...options,
  });
};

/**
 * Get colonies
 * Returns a list of all planetary colonies owned by a character.
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/planets/`
 *
 * Alternate route: `/legacy/characters/{character_id}/planets/`
 *
 * Alternate route: `/v1/characters/{character_id}/planets/`
 *
 * ---
 * This route is cached for up to 600 seconds
 */
export const getCharactersCharacterIdPlanets = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdPlanetsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdPlanetsResponse,
    GetCharactersCharacterIdPlanetsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/planets/',
    ...options,
  });
};

/**
 * Get colony layout
 * Returns full details on the layout of a single planetary colony, including links, pins and routes. Note: Planetary information is only recalculated when the colony is viewed through the client. Information will not update until this criteria is met.
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/planets/{planet_id}/`
 *
 * Alternate route: `/v3/characters/{character_id}/planets/{planet_id}/`
 *
 */
export const getCharactersCharacterIdPlanetsPlanetId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdPlanetsPlanetIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdPlanetsPlanetIdResponse,
    GetCharactersCharacterIdPlanetsPlanetIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/planets/{planet_id}/',
    ...options,
  });
};

/**
 * Get character portraits
 * Get portrait urls for a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/portrait/`
 *
 * Alternate route: `/v2/characters/{character_id}/portrait/`
 *
 * Alternate route: `/v3/characters/{character_id}/portrait/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getCharactersCharacterIdPortrait = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdPortraitData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdPortraitResponse,
    GetCharactersCharacterIdPortraitError,
    ThrowOnError
  >({
    url: '/characters/{character_id}/portrait/',
    ...options,
  });
};

/**
 * Get character corporation roles
 * Returns a character's corporation roles
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/roles/`
 *
 * Alternate route: `/v3/characters/{character_id}/roles/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdRoles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdRolesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdRolesResponse,
    GetCharactersCharacterIdRolesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/roles/',
    ...options,
  });
};

/**
 * Search on a string
 * Search for entities that match a given sub-string.
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/search/`
 *
 * Alternate route: `/legacy/characters/{character_id}/search/`
 *
 * Alternate route: `/v3/characters/{character_id}/search/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdSearch = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdSearchData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdSearchResponse,
    GetCharactersCharacterIdSearchError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    querySerializer: {
      array: {
        explode: false,
        style: 'form',
      },
    },
    url: '/characters/{character_id}/search/',
    ...options,
  });
};

/**
 * Get current ship
 * Get the current ship type, name and id
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/ship/`
 *
 * Alternate route: `/legacy/characters/{character_id}/ship/`
 *
 * Alternate route: `/v1/characters/{character_id}/ship/`
 *
 * Alternate route: `/v2/characters/{character_id}/ship/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getCharactersCharacterIdShip = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdShipData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdShipResponse,
    GetCharactersCharacterIdShipError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/ship/',
    ...options,
  });
};

/**
 * Get character's skill queue
 * List the configured skill queue for the given character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/skillqueue/`
 *
 * Alternate route: `/legacy/characters/{character_id}/skillqueue/`
 *
 * Alternate route: `/v2/characters/{character_id}/skillqueue/`
 *
 * ---
 * This route is cached for up to 120 seconds
 */
export const getCharactersCharacterIdSkillqueue = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdSkillqueueData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdSkillqueueResponse,
    GetCharactersCharacterIdSkillqueueError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/skillqueue/',
    ...options,
  });
};

/**
 * Get character skills
 * List all trained skills for the given character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/skills/`
 *
 * Alternate route: `/v4/characters/{character_id}/skills/`
 *
 * ---
 * This route is cached for up to 120 seconds
 */
export const getCharactersCharacterIdSkills = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdSkillsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdSkillsResponse,
    GetCharactersCharacterIdSkillsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/skills/',
    ...options,
  });
};

/**
 * Get standings
 * Return character standings from agents, NPC corporations, and factions
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/standings/`
 *
 * Alternate route: `/v2/characters/{character_id}/standings/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdStandings = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdStandingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdStandingsResponse,
    GetCharactersCharacterIdStandingsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/standings/',
    ...options,
  });
};

/**
 * Get character corporation titles
 * Returns a character's titles
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/titles/`
 *
 * Alternate route: `/v2/characters/{character_id}/titles/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdTitles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdTitlesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdTitlesResponse,
    GetCharactersCharacterIdTitlesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/titles/',
    ...options,
  });
};

/**
 * Get a character's wallet balance
 * Returns a character's wallet balance
 *
 * ---
 * Alternate route: `/legacy/characters/{character_id}/wallet/`
 *
 * Alternate route: `/v1/characters/{character_id}/wallet/`
 *
 * ---
 * This route is cached for up to 120 seconds
 *
 * ---
 * [Diff of the upcoming changes](https://esi.evetech.net/diff/latest/dev/#GET-/characters/{character_id}/wallet/)
 */
export const getCharactersCharacterIdWallet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdWalletData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdWalletResponse,
    GetCharactersCharacterIdWalletError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/wallet/',
    ...options,
  });
};

/**
 * Get character wallet journal
 * Retrieve the given character's wallet journal going 30 days back
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/wallet/journal/`
 *
 * Alternate route: `/v6/characters/{character_id}/wallet/journal/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdWalletJournal = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCharactersCharacterIdWalletJournalData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdWalletJournalResponse,
    GetCharactersCharacterIdWalletJournalError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/wallet/journal/',
    ...options,
  });
};

/**
 * Get wallet transactions
 * Get wallet transactions of a character
 *
 * ---
 * Alternate route: `/dev/characters/{character_id}/wallet/transactions/`
 *
 * Alternate route: `/legacy/characters/{character_id}/wallet/transactions/`
 *
 * Alternate route: `/v1/characters/{character_id}/wallet/transactions/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCharactersCharacterIdWalletTransactions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCharactersCharacterIdWalletTransactionsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCharactersCharacterIdWalletTransactionsResponse,
    GetCharactersCharacterIdWalletTransactionsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/characters/{character_id}/wallet/transactions/',
    ...options,
  });
};

/**
 * Get public contract bids
 * Lists bids on a public auction contract
 *
 * ---
 * Alternate route: `/dev/contracts/public/bids/{contract_id}/`
 *
 * Alternate route: `/legacy/contracts/public/bids/{contract_id}/`
 *
 * Alternate route: `/v1/contracts/public/bids/{contract_id}/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getContractsPublicBidsContractId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetContractsPublicBidsContractIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetContractsPublicBidsContractIdResponse,
    GetContractsPublicBidsContractIdError,
    ThrowOnError
  >({
    url: '/contracts/public/bids/{contract_id}/',
    ...options,
  });
};

/**
 * Get public contract items
 * Lists items of a public contract
 *
 * ---
 * Alternate route: `/dev/contracts/public/items/{contract_id}/`
 *
 * Alternate route: `/legacy/contracts/public/items/{contract_id}/`
 *
 * Alternate route: `/v1/contracts/public/items/{contract_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getContractsPublicItemsContractId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetContractsPublicItemsContractIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetContractsPublicItemsContractIdResponse,
    GetContractsPublicItemsContractIdError,
    ThrowOnError
  >({
    url: '/contracts/public/items/{contract_id}/',
    ...options,
  });
};

/**
 * Get public contracts
 * Returns a paginated list of all public contracts in the given region
 *
 * ---
 * Alternate route: `/dev/contracts/public/{region_id}/`
 *
 * Alternate route: `/legacy/contracts/public/{region_id}/`
 *
 * Alternate route: `/v1/contracts/public/{region_id}/`
 *
 * ---
 * This route is cached for up to 1800 seconds
 */
export const getContractsPublicRegionId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetContractsPublicRegionIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetContractsPublicRegionIdResponse,
    GetContractsPublicRegionIdError,
    ThrowOnError
  >({
    url: '/contracts/public/{region_id}/',
    ...options,
  });
};

/**
 * Moon extraction timers
 * Extraction timers for all moon chunks being extracted by refineries belonging to a corporation.
 *
 *
 * ---
 * Alternate route: `/dev/corporation/{corporation_id}/mining/extractions/`
 *
 * Alternate route: `/legacy/corporation/{corporation_id}/mining/extractions/`
 *
 * Alternate route: `/v1/corporation/{corporation_id}/mining/extractions/`
 *
 * ---
 * This route is cached for up to 1800 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Station_Manager
 *
 */
export const getCorporationCorporationIdMiningExtractions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationCorporationIdMiningExtractionsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationCorporationIdMiningExtractionsResponse,
    GetCorporationCorporationIdMiningExtractionsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporation/{corporation_id}/mining/extractions/',
    ...options,
  });
};

/**
 * Corporation mining observers
 * Paginated list of all entities capable of observing and recording mining for a corporation
 *
 *
 * ---
 * Alternate route: `/dev/corporation/{corporation_id}/mining/observers/`
 *
 * Alternate route: `/legacy/corporation/{corporation_id}/mining/observers/`
 *
 * Alternate route: `/v1/corporation/{corporation_id}/mining/observers/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Accountant
 *
 */
export const getCorporationCorporationIdMiningObservers = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationCorporationIdMiningObserversData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationCorporationIdMiningObserversResponse,
    GetCorporationCorporationIdMiningObserversError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporation/{corporation_id}/mining/observers/',
    ...options,
  });
};

/**
 * Observed corporation mining
 * Paginated record of all mining seen by an observer
 *
 *
 * ---
 * Alternate route: `/dev/corporation/{corporation_id}/mining/observers/{observer_id}/`
 *
 * Alternate route: `/legacy/corporation/{corporation_id}/mining/observers/{observer_id}/`
 *
 * Alternate route: `/v1/corporation/{corporation_id}/mining/observers/{observer_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Accountant
 *
 */
export const getCorporationCorporationIdMiningObserversObserverId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationCorporationIdMiningObserversObserverIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationCorporationIdMiningObserversObserverIdResponse,
    GetCorporationCorporationIdMiningObserversObserverIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporation/{corporation_id}/mining/observers/{observer_id}/',
    ...options,
  });
};

/**
 * Get npc corporations
 * Get a list of npc corporations
 *
 * ---
 * Alternate route: `/dev/corporations/npccorps/`
 *
 * Alternate route: `/v2/corporations/npccorps/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getCorporationsNpccorps = <ThrowOnError extends boolean = false>(
  options?: Options<GetCorporationsNpccorpsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetCorporationsNpccorpsResponse,
    GetCorporationsNpccorpsError,
    ThrowOnError
  >({
    url: '/corporations/npccorps/',
    ...options,
  });
};

/**
 * Get corporation information
 * Public information about a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/`
 *
 * Alternate route: `/v5/corporations/{corporation_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdResponse,
    GetCorporationsCorporationIdError,
    ThrowOnError
  >({
    url: '/corporations/{corporation_id}/',
    ...options,
  });
};

/**
 * Get alliance history
 * Get a list of all the alliances a corporation has been a member of
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/alliancehistory/`
 *
 * Alternate route: `/v3/corporations/{corporation_id}/alliancehistory/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdAlliancehistory = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdAlliancehistoryData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdAlliancehistoryResponse,
    GetCorporationsCorporationIdAlliancehistoryError,
    ThrowOnError
  >({
    url: '/corporations/{corporation_id}/alliancehistory/',
    ...options,
  });
};

/**
 * Get corporation assets
 * Return a list of the corporation assets
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/assets/`
 *
 * Alternate route: `/v5/corporations/{corporation_id}/assets/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdAssets = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdAssetsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdAssetsResponse,
    GetCorporationsCorporationIdAssetsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/assets/',
    ...options,
  });
};

/**
 * Get corporation asset locations
 * Return locations for a set of item ids, which you can get from corporation assets endpoint. Coordinates for items in hangars or stations are set to (0,0,0)
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/assets/locations/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/assets/locations/`
 *
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const postCorporationsCorporationIdAssetsLocations = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    PostCorporationsCorporationIdAssetsLocationsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCorporationsCorporationIdAssetsLocationsResponse,
    PostCorporationsCorporationIdAssetsLocationsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/assets/locations/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get corporation asset names
 * Return names for a set of item ids, which you can get from corporation assets endpoint. Only valid for items that can customize names, like containers or ships
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/assets/names/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/assets/names/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/assets/names/`
 *
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const postCorporationsCorporationIdAssetsNames = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostCorporationsCorporationIdAssetsNamesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostCorporationsCorporationIdAssetsNamesResponse,
    PostCorporationsCorporationIdAssetsNamesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/assets/names/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get corporation blueprints
 * Returns a list of blueprints the corporation owns
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/blueprints/`
 *
 * Alternate route: `/v3/corporations/{corporation_id}/blueprints/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdBlueprints = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdBlueprintsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdBlueprintsResponse,
    GetCorporationsCorporationIdBlueprintsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/blueprints/',
    ...options,
  });
};

/**
 * Get corporation contacts
 * Return contacts of a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/contacts/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/contacts/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCorporationsCorporationIdContacts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdContactsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdContactsResponse,
    GetCorporationsCorporationIdContactsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/contacts/',
    ...options,
  });
};

/**
 * Get corporation contact labels
 * Return custom labels for a corporation's contacts
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/contacts/labels/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/contacts/labels/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/contacts/labels/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCorporationsCorporationIdContactsLabels = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdContactsLabelsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdContactsLabelsResponse,
    GetCorporationsCorporationIdContactsLabelsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/contacts/labels/',
    ...options,
  });
};

/**
 * Get all corporation ALSC logs
 * Returns logs recorded in the past seven days from all audit log secure containers (ALSC) owned by a given corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/containers/logs/`
 *
 * Alternate route: `/v3/corporations/{corporation_id}/containers/logs/`
 *
 * ---
 * This route is cached for up to 600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdContainersLogs = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdContainersLogsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdContainersLogsResponse,
    GetCorporationsCorporationIdContainersLogsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/containers/logs/',
    ...options,
  });
};

/**
 * Get corporation contracts
 * Returns contracts available to a corporation, only if the corporation is issuer, acceptor or assignee. Only returns contracts no older than 30 days, or if the status is "in_progress".
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/contracts/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/contracts/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/contracts/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getCorporationsCorporationIdContracts = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdContractsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdContractsResponse,
    GetCorporationsCorporationIdContractsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/contracts/',
    ...options,
  });
};

/**
 * Get corporation contract bids
 * Lists bids on a particular auction contract
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/bids/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/bids/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/bids/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdContractsContractIdBids = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdContractsContractIdBidsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdContractsContractIdBidsResponse,
    GetCorporationsCorporationIdContractsContractIdBidsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/contracts/{contract_id}/bids/',
    ...options,
  });
};

/**
 * Get corporation contract items
 * Lists items of a particular contract
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/contracts/{contract_id}/items/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/contracts/{contract_id}/items/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/contracts/{contract_id}/items/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdContractsContractIdItems = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdContractsContractIdItemsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdContractsContractIdItemsResponse,
    GetCorporationsCorporationIdContractsContractIdItemsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/contracts/{contract_id}/items/',
    ...options,
  });
};

/**
 * List corporation customs offices
 * List customs offices owned by a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/customs_offices/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/customs_offices/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/customs_offices/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdCustomsOffices = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdCustomsOfficesData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdCustomsOfficesResponse,
    GetCorporationsCorporationIdCustomsOfficesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/customs_offices/',
    ...options,
  });
};

/**
 * Get corporation divisions
 * Return corporation hangar and wallet division names, only show if a division is not using the default name
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/divisions/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/divisions/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdDivisions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdDivisionsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdDivisionsResponse,
    GetCorporationsCorporationIdDivisionsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/divisions/',
    ...options,
  });
};

/**
 * Get corporation facilities
 * Return a corporation's facilities
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/facilities/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/facilities/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Factory_Manager
 *
 */
export const getCorporationsCorporationIdFacilities = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdFacilitiesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdFacilitiesResponse,
    GetCorporationsCorporationIdFacilitiesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/facilities/',
    ...options,
  });
};

/**
 * Overview of a corporation involved in faction warfare
 * Statistics about a corporation involved in faction warfare
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/fw/stats/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/fw/stats/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/fw/stats/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/fw/stats/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getCorporationsCorporationIdFwStats = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdFwStatsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdFwStatsResponse,
    GetCorporationsCorporationIdFwStatsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/fw/stats/',
    ...options,
  });
};

/**
 * Get corporation icon
 * Get the icon urls for a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/icons/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/icons/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdIcons = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdIconsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdIconsResponse,
    GetCorporationsCorporationIdIconsError,
    ThrowOnError
  >({
    url: '/corporations/{corporation_id}/icons/',
    ...options,
  });
};

/**
 * List corporation industry jobs
 * List industry jobs run by a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/industry/jobs/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/industry/jobs/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/industry/jobs/`
 *
 * ---
 * This route is cached for up to 300 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Factory_Manager
 *
 */
export const getCorporationsCorporationIdIndustryJobs = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdIndustryJobsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdIndustryJobsResponse,
    GetCorporationsCorporationIdIndustryJobsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/industry/jobs/',
    ...options,
  });
};

/**
 * Get a corporation's recent kills and losses
 * Get a list of a corporation's kills and losses going back 90 days
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/killmails/recent/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/killmails/recent/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/killmails/recent/`
 *
 * ---
 * This route is cached for up to 300 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdKillmailsRecent = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdKillmailsRecentData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdKillmailsRecentResponse,
    GetCorporationsCorporationIdKillmailsRecentError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/killmails/recent/',
    ...options,
  });
};

/**
 * Get corporation medals
 * Returns a corporation's medals
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/medals/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/medals/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdMedals = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdMedalsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdMedalsResponse,
    GetCorporationsCorporationIdMedalsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/medals/',
    ...options,
  });
};

/**
 * Get corporation issued medals
 * Returns medals issued by a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/medals/issued/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/medals/issued/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdMedalsIssued = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdMedalsIssuedData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdMedalsIssuedResponse,
    GetCorporationsCorporationIdMedalsIssuedError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/medals/issued/',
    ...options,
  });
};

/**
 * Get corporation members
 * Return the current member list of a corporation, the token's character need to be a member of the corporation.
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/members/`
 *
 * Alternate route: `/v4/corporations/{corporation_id}/members/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdMembers = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdMembersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdMembersResponse,
    GetCorporationsCorporationIdMembersError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/members/',
    ...options,
  });
};

/**
 * Get corporation member limit
 * Return a corporation's member limit, not including CEO himself
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/members/limit/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/members/limit/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdMembersLimit = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdMembersLimitData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdMembersLimitResponse,
    GetCorporationsCorporationIdMembersLimitError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/members/limit/',
    ...options,
  });
};

/**
 * Get corporation's members' titles
 * Returns a corporation's members' titles
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/members/titles/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/members/titles/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdMembersTitles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdMembersTitlesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdMembersTitlesResponse,
    GetCorporationsCorporationIdMembersTitlesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/members/titles/',
    ...options,
  });
};

/**
 * Track corporation members
 * Returns additional information about a corporation's members which helps tracking their activities
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/membertracking/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/membertracking/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdMembertracking = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdMembertrackingData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdMembertrackingResponse,
    GetCorporationsCorporationIdMembertrackingError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/membertracking/',
    ...options,
  });
};

/**
 * List open orders from a corporation
 * List open market orders placed on behalf of a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/orders/`
 *
 * Alternate route: `/v3/corporations/{corporation_id}/orders/`
 *
 * ---
 * This route is cached for up to 1200 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Accountant, Trader
 *
 */
export const getCorporationsCorporationIdOrders = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdOrdersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdOrdersResponse,
    GetCorporationsCorporationIdOrdersError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/orders/',
    ...options,
  });
};

/**
 * List historical orders from a corporation
 * List cancelled and expired market orders placed on behalf of a corporation up to 90 days in the past.
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/orders/history/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/orders/history/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Accountant, Trader
 *
 */
export const getCorporationsCorporationIdOrdersHistory = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdOrdersHistoryData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdOrdersHistoryResponse,
    GetCorporationsCorporationIdOrdersHistoryError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/orders/history/',
    ...options,
  });
};

/**
 * Get corporation member roles
 * Return the roles of all members if the character has the personnel manager role or any grantable role.
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/roles/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/roles/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdRoles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdRolesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdRolesResponse,
    GetCorporationsCorporationIdRolesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/roles/',
    ...options,
  });
};

/**
 * Get corporation member roles history
 * Return how roles have changed for a coporation's members, up to a month
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/roles/history/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/roles/history/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdRolesHistory = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdRolesHistoryData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdRolesHistoryResponse,
    GetCorporationsCorporationIdRolesHistoryError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/roles/history/',
    ...options,
  });
};

/**
 * Get corporation shareholders
 * Return the current shareholders of a corporation.
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/shareholders/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/shareholders/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/shareholders/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdShareholders = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdShareholdersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdShareholdersResponse,
    GetCorporationsCorporationIdShareholdersError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/shareholders/',
    ...options,
  });
};

/**
 * Get corporation standings
 * Return corporation standings from agents, NPC corporations, and factions
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/standings/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/standings/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getCorporationsCorporationIdStandings = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdStandingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdStandingsResponse,
    GetCorporationsCorporationIdStandingsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/standings/',
    ...options,
  });
};

/**
 * Get corporation starbases (POSes)
 * Returns list of corporation starbases (POSes)
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/starbases/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/starbases/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdStarbases = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdStarbasesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdStarbasesResponse,
    GetCorporationsCorporationIdStarbasesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/starbases/',
    ...options,
  });
};

/**
 * Get starbase (POS) detail
 * Returns various settings and fuels of a starbase (POS)
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/starbases/{starbase_id}/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/starbases/{starbase_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdStarbasesStarbaseId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdStarbasesStarbaseIdData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdStarbasesStarbaseIdResponse,
    GetCorporationsCorporationIdStarbasesStarbaseIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/starbases/{starbase_id}/',
    ...options,
  });
};

/**
 * Get corporation structures
 * Get a list of corporation structures. This route's version includes the changes to structures detailed in this blog: https://www.eveonline.com/article/upwell-2.0-structures-changes-coming-on-february-13th
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/structures/`
 *
 * Alternate route: `/v4/corporations/{corporation_id}/structures/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Station_Manager
 *
 */
export const getCorporationsCorporationIdStructures = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdStructuresData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdStructuresResponse,
    GetCorporationsCorporationIdStructuresError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/structures/',
    ...options,
  });
};

/**
 * Get corporation titles
 * Returns a corporation's titles
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/titles/`
 *
 * Alternate route: `/v2/corporations/{corporation_id}/titles/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Director
 *
 */
export const getCorporationsCorporationIdTitles = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdTitlesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdTitlesResponse,
    GetCorporationsCorporationIdTitlesError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/titles/',
    ...options,
  });
};

/**
 * Returns a corporation's wallet balance
 * Get a corporation's wallets
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/wallets/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/wallets/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/wallets/`
 *
 * ---
 * This route is cached for up to 300 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant
 *
 */
export const getCorporationsCorporationIdWallets = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetCorporationsCorporationIdWalletsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdWalletsResponse,
    GetCorporationsCorporationIdWalletsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/wallets/',
    ...options,
  });
};

/**
 * Get corporation wallet journal
 * Retrieve the given corporation's wallet journal for the given division going 30 days back
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/wallets/{division}/journal/`
 *
 * Alternate route: `/v4/corporations/{corporation_id}/wallets/{division}/journal/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant
 *
 */
export const getCorporationsCorporationIdWalletsDivisionJournal = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdWalletsDivisionJournalData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdWalletsDivisionJournalResponse,
    GetCorporationsCorporationIdWalletsDivisionJournalError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/wallets/{division}/journal/',
    ...options,
  });
};

/**
 * Get corporation wallet transactions
 * Get wallet transactions of a corporation
 *
 * ---
 * Alternate route: `/dev/corporations/{corporation_id}/wallets/{division}/transactions/`
 *
 * Alternate route: `/legacy/corporations/{corporation_id}/wallets/{division}/transactions/`
 *
 * Alternate route: `/v1/corporations/{corporation_id}/wallets/{division}/transactions/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 *
 * ---
 * Requires one of the following EVE corporation role(s): Accountant, Junior_Accountant
 *
 */
export const getCorporationsCorporationIdWalletsDivisionTransactions = <
  ThrowOnError extends boolean = false,
>(
  options: Options<
    GetCorporationsCorporationIdWalletsDivisionTransactionsData,
    ThrowOnError
  >,
) => {
  return (options.client ?? _heyApiClient).get<
    GetCorporationsCorporationIdWalletsDivisionTransactionsResponse,
    GetCorporationsCorporationIdWalletsDivisionTransactionsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/corporations/{corporation_id}/wallets/{division}/transactions/',
    ...options,
  });
};

/**
 * Get attributes
 * Get a list of dogma attribute ids
 *
 * ---
 * Alternate route: `/dev/dogma/attributes/`
 *
 * Alternate route: `/legacy/dogma/attributes/`
 *
 * Alternate route: `/v1/dogma/attributes/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getDogmaAttributes = <ThrowOnError extends boolean = false>(
  options?: Options<GetDogmaAttributesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetDogmaAttributesResponse,
    GetDogmaAttributesError,
    ThrowOnError
  >({
    url: '/dogma/attributes/',
    ...options,
  });
};

/**
 * Get attribute information
 * Get information on a dogma attribute
 *
 * ---
 * Alternate route: `/dev/dogma/attributes/{attribute_id}/`
 *
 * Alternate route: `/legacy/dogma/attributes/{attribute_id}/`
 *
 * Alternate route: `/v1/dogma/attributes/{attribute_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getDogmaAttributesAttributeId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetDogmaAttributesAttributeIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetDogmaAttributesAttributeIdResponse,
    GetDogmaAttributesAttributeIdError,
    ThrowOnError
  >({
    url: '/dogma/attributes/{attribute_id}/',
    ...options,
  });
};

/**
 * Get dynamic item information
 * Returns info about a dynamic item resulting from mutation with a mutaplasmid.
 *
 * ---
 * Alternate route: `/dev/dogma/dynamic/items/{type_id}/{item_id}/`
 *
 * Alternate route: `/legacy/dogma/dynamic/items/{type_id}/{item_id}/`
 *
 * Alternate route: `/v1/dogma/dynamic/items/{type_id}/{item_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getDogmaDynamicItemsTypeIdItemId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetDogmaDynamicItemsTypeIdItemIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetDogmaDynamicItemsTypeIdItemIdResponse,
    GetDogmaDynamicItemsTypeIdItemIdError,
    ThrowOnError
  >({
    url: '/dogma/dynamic/items/{type_id}/{item_id}/',
    ...options,
  });
};

/**
 * Get effects
 * Get a list of dogma effect ids
 *
 * ---
 * Alternate route: `/dev/dogma/effects/`
 *
 * Alternate route: `/legacy/dogma/effects/`
 *
 * Alternate route: `/v1/dogma/effects/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getDogmaEffects = <ThrowOnError extends boolean = false>(
  options?: Options<GetDogmaEffectsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetDogmaEffectsResponse,
    GetDogmaEffectsError,
    ThrowOnError
  >({
    url: '/dogma/effects/',
    ...options,
  });
};

/**
 * Get effect information
 * Get information on a dogma effect
 *
 * ---
 * Alternate route: `/dev/dogma/effects/{effect_id}/`
 *
 * Alternate route: `/v2/dogma/effects/{effect_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getDogmaEffectsEffectId = <ThrowOnError extends boolean = false>(
  options: Options<GetDogmaEffectsEffectIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetDogmaEffectsEffectIdResponse,
    GetDogmaEffectsEffectIdError,
    ThrowOnError
  >({
    url: '/dogma/effects/{effect_id}/',
    ...options,
  });
};

/**
 * Get fleet information
 * Return details about a fleet
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getFleetsFleetId = <ThrowOnError extends boolean = false>(
  options: Options<GetFleetsFleetIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetFleetsFleetIdResponse,
    GetFleetsFleetIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/',
    ...options,
  });
};

/**
 * Update fleet
 * Update settings about a fleet
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/`
 *
 */
export const putFleetsFleetId = <ThrowOnError extends boolean = false>(
  options: Options<PutFleetsFleetIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    unknown,
    PutFleetsFleetIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get fleet members
 * Return information about fleet members
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/members/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/members/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/members/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getFleetsFleetIdMembers = <ThrowOnError extends boolean = false>(
  options: Options<GetFleetsFleetIdMembersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetFleetsFleetIdMembersResponse,
    GetFleetsFleetIdMembersError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/members/',
    ...options,
  });
};

/**
 * Create fleet invitation
 * Invite a character into the fleet. If a character has a CSPA charge set it is not possible to invite them to the fleet using ESI
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/members/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/members/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/members/`
 *
 */
export const postFleetsFleetIdMembers = <ThrowOnError extends boolean = false>(
  options: Options<PostFleetsFleetIdMembersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    unknown,
    PostFleetsFleetIdMembersError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/members/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Kick fleet member
 * Kick a fleet member
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`
 *
 */
export const deleteFleetsFleetIdMembersMemberId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteFleetsFleetIdMembersMemberIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    DeleteFleetsFleetIdMembersMemberIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/members/{member_id}/',
    ...options,
  });
};

/**
 * Move fleet member
 * Move a fleet member around
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/members/{member_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/members/{member_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/members/{member_id}/`
 *
 */
export const putFleetsFleetIdMembersMemberId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PutFleetsFleetIdMembersMemberIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    unknown,
    PutFleetsFleetIdMembersMemberIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/members/{member_id}/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Delete fleet squad
 * Delete a fleet squad, only empty squads can be deleted
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`
 *
 */
export const deleteFleetsFleetIdSquadsSquadId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteFleetsFleetIdSquadsSquadIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    DeleteFleetsFleetIdSquadsSquadIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/squads/{squad_id}/',
    ...options,
  });
};

/**
 * Rename fleet squad
 * Rename a fleet squad
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/squads/{squad_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/squads/{squad_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/squads/{squad_id}/`
 *
 */
export const putFleetsFleetIdSquadsSquadId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PutFleetsFleetIdSquadsSquadIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    unknown,
    PutFleetsFleetIdSquadsSquadIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/squads/{squad_id}/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get fleet wings
 * Return information about wings in a fleet
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/wings/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/wings/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/wings/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getFleetsFleetIdWings = <ThrowOnError extends boolean = false>(
  options: Options<GetFleetsFleetIdWingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetFleetsFleetIdWingsResponse,
    GetFleetsFleetIdWingsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/wings/',
    ...options,
  });
};

/**
 * Create fleet wing
 * Create a new wing in a fleet
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/wings/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/wings/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/wings/`
 *
 */
export const postFleetsFleetIdWings = <ThrowOnError extends boolean = false>(
  options: Options<PostFleetsFleetIdWingsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostFleetsFleetIdWingsResponse,
    PostFleetsFleetIdWingsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/wings/',
    ...options,
  });
};

/**
 * Delete fleet wing
 * Delete a fleet wing, only empty wings can be deleted. The wing may contain squads, but the squads must be empty
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`
 *
 */
export const deleteFleetsFleetIdWingsWingId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<DeleteFleetsFleetIdWingsWingIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).delete<
    unknown,
    DeleteFleetsFleetIdWingsWingIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/wings/{wing_id}/',
    ...options,
  });
};

/**
 * Rename fleet wing
 * Rename a fleet wing
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/`
 *
 */
export const putFleetsFleetIdWingsWingId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PutFleetsFleetIdWingsWingIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).put<
    unknown,
    PutFleetsFleetIdWingsWingIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/wings/{wing_id}/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Create fleet squad
 * Create a new squad in a fleet
 *
 * ---
 * Alternate route: `/dev/fleets/{fleet_id}/wings/{wing_id}/squads/`
 *
 * Alternate route: `/legacy/fleets/{fleet_id}/wings/{wing_id}/squads/`
 *
 * Alternate route: `/v1/fleets/{fleet_id}/wings/{wing_id}/squads/`
 *
 */
export const postFleetsFleetIdWingsWingIdSquads = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostFleetsFleetIdWingsWingIdSquadsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostFleetsFleetIdWingsWingIdSquadsResponse,
    PostFleetsFleetIdWingsWingIdSquadsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/fleets/{fleet_id}/wings/{wing_id}/squads/',
    ...options,
  });
};

/**
 * List of the top factions in faction warfare
 * Top 4 leaderboard of factions for kills and victory points separated by total, last week and yesterday
 *
 * ---
 * Alternate route: `/dev/fw/leaderboards/`
 *
 * Alternate route: `/legacy/fw/leaderboards/`
 *
 * Alternate route: `/v1/fw/leaderboards/`
 *
 * Alternate route: `/v2/fw/leaderboards/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getFwLeaderboards = <ThrowOnError extends boolean = false>(
  options?: Options<GetFwLeaderboardsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetFwLeaderboardsResponse,
    GetFwLeaderboardsError,
    ThrowOnError
  >({
    url: '/fw/leaderboards/',
    ...options,
  });
};

/**
 * List of the top pilots in faction warfare
 * Top 100 leaderboard of pilots for kills and victory points separated by total, last week and yesterday
 *
 * ---
 * Alternate route: `/dev/fw/leaderboards/characters/`
 *
 * Alternate route: `/legacy/fw/leaderboards/characters/`
 *
 * Alternate route: `/v1/fw/leaderboards/characters/`
 *
 * Alternate route: `/v2/fw/leaderboards/characters/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getFwLeaderboardsCharacters = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetFwLeaderboardsCharactersData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetFwLeaderboardsCharactersResponse,
    GetFwLeaderboardsCharactersError,
    ThrowOnError
  >({
    url: '/fw/leaderboards/characters/',
    ...options,
  });
};

/**
 * List of the top corporations in faction warfare
 * Top 10 leaderboard of corporations for kills and victory points separated by total, last week and yesterday
 *
 * ---
 * Alternate route: `/dev/fw/leaderboards/corporations/`
 *
 * Alternate route: `/legacy/fw/leaderboards/corporations/`
 *
 * Alternate route: `/v1/fw/leaderboards/corporations/`
 *
 * Alternate route: `/v2/fw/leaderboards/corporations/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getFwLeaderboardsCorporations = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetFwLeaderboardsCorporationsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetFwLeaderboardsCorporationsResponse,
    GetFwLeaderboardsCorporationsError,
    ThrowOnError
  >({
    url: '/fw/leaderboards/corporations/',
    ...options,
  });
};

/**
 * An overview of statistics about factions involved in faction warfare
 * Statistical overviews of factions involved in faction warfare
 *
 * ---
 * Alternate route: `/dev/fw/stats/`
 *
 * Alternate route: `/legacy/fw/stats/`
 *
 * Alternate route: `/v1/fw/stats/`
 *
 * Alternate route: `/v2/fw/stats/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getFwStats = <ThrowOnError extends boolean = false>(
  options?: Options<GetFwStatsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetFwStatsResponse,
    GetFwStatsError,
    ThrowOnError
  >({
    url: '/fw/stats/',
    ...options,
  });
};

/**
 * Ownership of faction warfare systems
 * An overview of the current ownership of faction warfare solar systems
 *
 * ---
 * Alternate route: `/dev/fw/systems/`
 *
 * Alternate route: `/legacy/fw/systems/`
 *
 * Alternate route: `/v2/fw/systems/`
 *
 * Alternate route: `/v3/fw/systems/`
 *
 * ---
 * This route is cached for up to 1800 seconds
 */
export const getFwSystems = <ThrowOnError extends boolean = false>(
  options?: Options<GetFwSystemsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetFwSystemsResponse,
    GetFwSystemsError,
    ThrowOnError
  >({
    url: '/fw/systems/',
    ...options,
  });
};

/**
 * Data about which NPC factions are at war
 * Data about which NPC factions are at war
 *
 * ---
 * Alternate route: `/dev/fw/wars/`
 *
 * Alternate route: `/legacy/fw/wars/`
 *
 * Alternate route: `/v1/fw/wars/`
 *
 * Alternate route: `/v2/fw/wars/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getFwWars = <ThrowOnError extends boolean = false>(
  options?: Options<GetFwWarsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetFwWarsResponse,
    GetFwWarsError,
    ThrowOnError
  >({
    url: '/fw/wars/',
    ...options,
  });
};

/**
 * List incursions
 * Return a list of current incursions
 *
 * ---
 * Alternate route: `/dev/incursions/`
 *
 * Alternate route: `/legacy/incursions/`
 *
 * Alternate route: `/v1/incursions/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getIncursions = <ThrowOnError extends boolean = false>(
  options?: Options<GetIncursionsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetIncursionsResponse,
    GetIncursionsError,
    ThrowOnError
  >({
    url: '/incursions/',
    ...options,
  });
};

/**
 * List industry facilities
 * Return a list of industry facilities
 *
 * ---
 * Alternate route: `/dev/industry/facilities/`
 *
 * Alternate route: `/legacy/industry/facilities/`
 *
 * Alternate route: `/v1/industry/facilities/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getIndustryFacilities = <ThrowOnError extends boolean = false>(
  options?: Options<GetIndustryFacilitiesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetIndustryFacilitiesResponse,
    GetIndustryFacilitiesError,
    ThrowOnError
  >({
    url: '/industry/facilities/',
    ...options,
  });
};

/**
 * List solar system cost indices
 * Return cost indices for solar systems
 *
 * ---
 * Alternate route: `/dev/industry/systems/`
 *
 * Alternate route: `/legacy/industry/systems/`
 *
 * Alternate route: `/v1/industry/systems/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getIndustrySystems = <ThrowOnError extends boolean = false>(
  options?: Options<GetIndustrySystemsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetIndustrySystemsResponse,
    GetIndustrySystemsError,
    ThrowOnError
  >({
    url: '/industry/systems/',
    ...options,
  });
};

/**
 * List insurance levels
 * Return available insurance levels for all ship types
 *
 * ---
 * Alternate route: `/dev/insurance/prices/`
 *
 * Alternate route: `/legacy/insurance/prices/`
 *
 * Alternate route: `/v1/insurance/prices/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getInsurancePrices = <ThrowOnError extends boolean = false>(
  options?: Options<GetInsurancePricesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetInsurancePricesResponse,
    GetInsurancePricesError,
    ThrowOnError
  >({
    url: '/insurance/prices/',
    ...options,
  });
};

/**
 * Get a single killmail
 * Return a single killmail from its ID and hash
 *
 * ---
 * Alternate route: `/dev/killmails/{killmail_id}/{killmail_hash}/`
 *
 * Alternate route: `/legacy/killmails/{killmail_id}/{killmail_hash}/`
 *
 * Alternate route: `/v1/killmails/{killmail_id}/{killmail_hash}/`
 *
 * ---
 * This route is cached for up to 30758400 seconds
 */
export const getKillmailsKillmailIdKillmailHash = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetKillmailsKillmailIdKillmailHashData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetKillmailsKillmailIdKillmailHashResponse,
    GetKillmailsKillmailIdKillmailHashError,
    ThrowOnError
  >({
    url: '/killmails/{killmail_id}/{killmail_hash}/',
    ...options,
  });
};

/**
 * List loyalty store offers
 * Return a list of offers from a specific corporation's loyalty store
 *
 * ---
 * Alternate route: `/dev/loyalty/stores/{corporation_id}/offers/`
 *
 * Alternate route: `/legacy/loyalty/stores/{corporation_id}/offers/`
 *
 * Alternate route: `/v1/loyalty/stores/{corporation_id}/offers/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getLoyaltyStoresCorporationIdOffers = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetLoyaltyStoresCorporationIdOffersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetLoyaltyStoresCorporationIdOffersResponse,
    GetLoyaltyStoresCorporationIdOffersError,
    ThrowOnError
  >({
    url: '/loyalty/stores/{corporation_id}/offers/',
    ...options,
  });
};

/**
 * Get item groups
 * Get a list of item groups
 *
 * ---
 * Alternate route: `/dev/markets/groups/`
 *
 * Alternate route: `/legacy/markets/groups/`
 *
 * Alternate route: `/v1/markets/groups/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getMarketsGroups = <ThrowOnError extends boolean = false>(
  options?: Options<GetMarketsGroupsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetMarketsGroupsResponse,
    GetMarketsGroupsError,
    ThrowOnError
  >({
    url: '/markets/groups/',
    ...options,
  });
};

/**
 * Get item group information
 * Get information on an item group
 *
 * ---
 * Alternate route: `/dev/markets/groups/{market_group_id}/`
 *
 * Alternate route: `/legacy/markets/groups/{market_group_id}/`
 *
 * Alternate route: `/v1/markets/groups/{market_group_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getMarketsGroupsMarketGroupId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetMarketsGroupsMarketGroupIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetMarketsGroupsMarketGroupIdResponse,
    GetMarketsGroupsMarketGroupIdError,
    ThrowOnError
  >({
    url: '/markets/groups/{market_group_id}/',
    ...options,
  });
};

/**
 * List market prices
 * Return a list of prices
 *
 * ---
 * Alternate route: `/dev/markets/prices/`
 *
 * Alternate route: `/legacy/markets/prices/`
 *
 * Alternate route: `/v1/markets/prices/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getMarketsPrices = <ThrowOnError extends boolean = false>(
  options?: Options<GetMarketsPricesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetMarketsPricesResponse,
    GetMarketsPricesError,
    ThrowOnError
  >({
    url: '/markets/prices/',
    ...options,
  });
};

/**
 * List orders in a structure
 * Return all orders in a structure
 *
 * ---
 * Alternate route: `/dev/markets/structures/{structure_id}/`
 *
 * Alternate route: `/legacy/markets/structures/{structure_id}/`
 *
 * Alternate route: `/v1/markets/structures/{structure_id}/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getMarketsStructuresStructureId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetMarketsStructuresStructureIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetMarketsStructuresStructureIdResponse,
    GetMarketsStructuresStructureIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/markets/structures/{structure_id}/',
    ...options,
  });
};

/**
 * List historical market statistics in a region
 * Return a list of historical market statistics for the specified type in a region
 *
 * ---
 * Alternate route: `/dev/markets/{region_id}/history/`
 *
 * Alternate route: `/legacy/markets/{region_id}/history/`
 *
 * Alternate route: `/v1/markets/{region_id}/history/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getMarketsRegionIdHistory = <ThrowOnError extends boolean = false>(
  options: Options<GetMarketsRegionIdHistoryData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetMarketsRegionIdHistoryResponse,
    GetMarketsRegionIdHistoryError,
    ThrowOnError
  >({
    url: '/markets/{region_id}/history/',
    ...options,
  });
};

/**
 * List orders in a region
 * Return a list of orders in a region
 *
 * ---
 * Alternate route: `/dev/markets/{region_id}/orders/`
 *
 * Alternate route: `/legacy/markets/{region_id}/orders/`
 *
 * Alternate route: `/v1/markets/{region_id}/orders/`
 *
 * ---
 * This route is cached for up to 300 seconds
 */
export const getMarketsRegionIdOrders = <ThrowOnError extends boolean = false>(
  options: Options<GetMarketsRegionIdOrdersData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetMarketsRegionIdOrdersResponse,
    GetMarketsRegionIdOrdersError,
    ThrowOnError
  >({
    url: '/markets/{region_id}/orders/',
    ...options,
  });
};

/**
 * List type IDs relevant to a market
 * Return a list of type IDs that have active orders in the region, for efficient market indexing.
 *
 * ---
 * Alternate route: `/dev/markets/{region_id}/types/`
 *
 * Alternate route: `/legacy/markets/{region_id}/types/`
 *
 * Alternate route: `/v1/markets/{region_id}/types/`
 *
 * ---
 * This route is cached for up to 600 seconds
 */
export const getMarketsRegionIdTypes = <ThrowOnError extends boolean = false>(
  options: Options<GetMarketsRegionIdTypesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetMarketsRegionIdTypesResponse,
    GetMarketsRegionIdTypesError,
    ThrowOnError
  >({
    url: '/markets/{region_id}/types/',
    ...options,
  });
};

/**
 * Get route
 * Get the systems between origin and destination
 *
 * ---
 * Alternate route: `/dev/route/{origin}/{destination}/`
 *
 * Alternate route: `/legacy/route/{origin}/{destination}/`
 *
 * Alternate route: `/v1/route/{origin}/{destination}/`
 *
 * ---
 * This route is cached for up to 86400 seconds
 */
export const getRouteOriginDestination = <ThrowOnError extends boolean = false>(
  options: Options<GetRouteOriginDestinationData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetRouteOriginDestinationResponse,
    GetRouteOriginDestinationError,
    ThrowOnError
  >({
    querySerializer: {
      array: {
        explode: false,
        style: 'form',
      },
    },
    url: '/route/{origin}/{destination}/',
    ...options,
  });
};

/**
 * List sovereignty campaigns
 * Shows sovereignty data for campaigns.
 *
 * ---
 * Alternate route: `/dev/sovereignty/campaigns/`
 *
 * Alternate route: `/legacy/sovereignty/campaigns/`
 *
 * Alternate route: `/v1/sovereignty/campaigns/`
 *
 * ---
 * This route is cached for up to 5 seconds
 */
export const getSovereigntyCampaigns = <ThrowOnError extends boolean = false>(
  options?: Options<GetSovereigntyCampaignsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetSovereigntyCampaignsResponse,
    GetSovereigntyCampaignsError,
    ThrowOnError
  >({
    url: '/sovereignty/campaigns/',
    ...options,
  });
};

/**
 * List sovereignty of systems
 * Shows sovereignty information for solar systems
 *
 * ---
 * Alternate route: `/dev/sovereignty/map/`
 *
 * Alternate route: `/legacy/sovereignty/map/`
 *
 * Alternate route: `/v1/sovereignty/map/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getSovereigntyMap = <ThrowOnError extends boolean = false>(
  options?: Options<GetSovereigntyMapData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetSovereigntyMapResponse,
    GetSovereigntyMapError,
    ThrowOnError
  >({
    url: '/sovereignty/map/',
    ...options,
  });
};

/**
 * List sovereignty structures
 * Shows sovereignty data for structures.
 *
 * ---
 * Alternate route: `/dev/sovereignty/structures/`
 *
 * Alternate route: `/legacy/sovereignty/structures/`
 *
 * Alternate route: `/v1/sovereignty/structures/`
 *
 * ---
 * This route is cached for up to 120 seconds
 */
export const getSovereigntyStructures = <ThrowOnError extends boolean = false>(
  options?: Options<GetSovereigntyStructuresData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetSovereigntyStructuresResponse,
    GetSovereigntyStructuresError,
    ThrowOnError
  >({
    url: '/sovereignty/structures/',
    ...options,
  });
};

/**
 * Retrieve the uptime and player counts
 * EVE Server status
 *
 * ---
 * Alternate route: `/dev/status/`
 *
 * Alternate route: `/legacy/status/`
 *
 * Alternate route: `/v1/status/`
 *
 * Alternate route: `/v2/status/`
 *
 * ---
 * This route is cached for up to 30 seconds
 */
export const getStatus = <ThrowOnError extends boolean = false>(
  options?: Options<GetStatusData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetStatusResponse,
    GetStatusError,
    ThrowOnError
  >({
    url: '/status/',
    ...options,
  });
};

/**
 * Set Autopilot Waypoint
 * Set a solar system as autopilot waypoint
 *
 * ---
 * Alternate route: `/dev/ui/autopilot/waypoint/`
 *
 * Alternate route: `/legacy/ui/autopilot/waypoint/`
 *
 * Alternate route: `/v2/ui/autopilot/waypoint/`
 *
 */
export const postUiAutopilotWaypoint = <ThrowOnError extends boolean = false>(
  options: Options<PostUiAutopilotWaypointData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    unknown,
    PostUiAutopilotWaypointError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/ui/autopilot/waypoint/',
    ...options,
  });
};

/**
 * Open Contract Window
 * Open the contract window inside the client
 *
 * ---
 * Alternate route: `/dev/ui/openwindow/contract/`
 *
 * Alternate route: `/legacy/ui/openwindow/contract/`
 *
 * Alternate route: `/v1/ui/openwindow/contract/`
 *
 */
export const postUiOpenwindowContract = <ThrowOnError extends boolean = false>(
  options: Options<PostUiOpenwindowContractData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    unknown,
    PostUiOpenwindowContractError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/ui/openwindow/contract/',
    ...options,
  });
};

/**
 * Open Information Window
 * Open the information window for a character, corporation or alliance inside the client
 *
 * ---
 * Alternate route: `/dev/ui/openwindow/information/`
 *
 * Alternate route: `/legacy/ui/openwindow/information/`
 *
 * Alternate route: `/v1/ui/openwindow/information/`
 *
 */
export const postUiOpenwindowInformation = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostUiOpenwindowInformationData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    unknown,
    PostUiOpenwindowInformationError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/ui/openwindow/information/',
    ...options,
  });
};

/**
 * Open Market Details
 * Open the market details window for a specific typeID inside the client
 *
 * ---
 * Alternate route: `/dev/ui/openwindow/marketdetails/`
 *
 * Alternate route: `/legacy/ui/openwindow/marketdetails/`
 *
 * Alternate route: `/v1/ui/openwindow/marketdetails/`
 *
 */
export const postUiOpenwindowMarketdetails = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostUiOpenwindowMarketdetailsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    unknown,
    PostUiOpenwindowMarketdetailsError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/ui/openwindow/marketdetails/',
    ...options,
  });
};

/**
 * Open New Mail Window
 * Open the New Mail window, according to settings from the request if applicable
 *
 * ---
 * Alternate route: `/dev/ui/openwindow/newmail/`
 *
 * Alternate route: `/legacy/ui/openwindow/newmail/`
 *
 * Alternate route: `/v1/ui/openwindow/newmail/`
 *
 */
export const postUiOpenwindowNewmail = <ThrowOnError extends boolean = false>(
  options: Options<PostUiOpenwindowNewmailData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    unknown,
    PostUiOpenwindowNewmailError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/ui/openwindow/newmail/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get ancestries
 * Get all character ancestries
 *
 * ---
 * Alternate route: `/legacy/universe/ancestries/`
 *
 * Alternate route: `/v1/universe/ancestries/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseAncestries = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseAncestriesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseAncestriesResponse,
    GetUniverseAncestriesError,
    ThrowOnError
  >({
    url: '/universe/ancestries/',
    ...options,
  });
};

/**
 * Get asteroid belt information
 * Get information on an asteroid belt
 *
 * ---
 * Alternate route: `/legacy/universe/asteroid_belts/{asteroid_belt_id}/`
 *
 * Alternate route: `/v1/universe/asteroid_belts/{asteroid_belt_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseAsteroidBeltsAsteroidBeltId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseAsteroidBeltsAsteroidBeltIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseAsteroidBeltsAsteroidBeltIdResponse,
    GetUniverseAsteroidBeltsAsteroidBeltIdError,
    ThrowOnError
  >({
    url: '/universe/asteroid_belts/{asteroid_belt_id}/',
    ...options,
  });
};

/**
 * Get bloodlines
 * Get a list of bloodlines
 *
 * ---
 * Alternate route: `/legacy/universe/bloodlines/`
 *
 * Alternate route: `/v1/universe/bloodlines/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseBloodlines = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseBloodlinesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseBloodlinesResponse,
    GetUniverseBloodlinesError,
    ThrowOnError
  >({
    url: '/universe/bloodlines/',
    ...options,
  });
};

/**
 * Get item categories
 * Get a list of item categories
 *
 * ---
 * Alternate route: `/legacy/universe/categories/`
 *
 * Alternate route: `/v1/universe/categories/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseCategories = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseCategoriesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseCategoriesResponse,
    GetUniverseCategoriesError,
    ThrowOnError
  >({
    url: '/universe/categories/',
    ...options,
  });
};

/**
 * Get item category information
 * Get information of an item category
 *
 * ---
 * Alternate route: `/legacy/universe/categories/{category_id}/`
 *
 * Alternate route: `/v1/universe/categories/{category_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseCategoriesCategoryId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseCategoriesCategoryIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseCategoriesCategoryIdResponse,
    GetUniverseCategoriesCategoryIdError,
    ThrowOnError
  >({
    url: '/universe/categories/{category_id}/',
    ...options,
  });
};

/**
 * Get constellations
 * Get a list of constellations
 *
 * ---
 * Alternate route: `/legacy/universe/constellations/`
 *
 * Alternate route: `/v1/universe/constellations/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseConstellations = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseConstellationsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseConstellationsResponse,
    GetUniverseConstellationsError,
    ThrowOnError
  >({
    url: '/universe/constellations/',
    ...options,
  });
};

/**
 * Get constellation information
 * Get information on a constellation
 *
 * ---
 * Alternate route: `/legacy/universe/constellations/{constellation_id}/`
 *
 * Alternate route: `/v1/universe/constellations/{constellation_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseConstellationsConstellationId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseConstellationsConstellationIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseConstellationsConstellationIdResponse,
    GetUniverseConstellationsConstellationIdError,
    ThrowOnError
  >({
    url: '/universe/constellations/{constellation_id}/',
    ...options,
  });
};

/**
 * Get factions
 * Get a list of factions
 *
 * ---
 * Alternate route: `/dev/universe/factions/`
 *
 * Alternate route: `/v2/universe/factions/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseFactions = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseFactionsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseFactionsResponse,
    GetUniverseFactionsError,
    ThrowOnError
  >({
    url: '/universe/factions/',
    ...options,
  });
};

/**
 * Get graphics
 * Get a list of graphics
 *
 * ---
 * Alternate route: `/legacy/universe/graphics/`
 *
 * Alternate route: `/v1/universe/graphics/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseGraphics = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseGraphicsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseGraphicsResponse,
    GetUniverseGraphicsError,
    ThrowOnError
  >({
    url: '/universe/graphics/',
    ...options,
  });
};

/**
 * Get graphic information
 * Get information on a graphic
 *
 * ---
 * Alternate route: `/dev/universe/graphics/{graphic_id}/`
 *
 * Alternate route: `/legacy/universe/graphics/{graphic_id}/`
 *
 * Alternate route: `/v1/universe/graphics/{graphic_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseGraphicsGraphicId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseGraphicsGraphicIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseGraphicsGraphicIdResponse,
    GetUniverseGraphicsGraphicIdError,
    ThrowOnError
  >({
    url: '/universe/graphics/{graphic_id}/',
    ...options,
  });
};

/**
 * Get item groups
 * Get a list of item groups
 *
 * ---
 * Alternate route: `/legacy/universe/groups/`
 *
 * Alternate route: `/v1/universe/groups/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseGroups = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseGroupsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseGroupsResponse,
    GetUniverseGroupsError,
    ThrowOnError
  >({
    url: '/universe/groups/',
    ...options,
  });
};

/**
 * Get item group information
 * Get information on an item group
 *
 * ---
 * Alternate route: `/dev/universe/groups/{group_id}/`
 *
 * Alternate route: `/legacy/universe/groups/{group_id}/`
 *
 * Alternate route: `/v1/universe/groups/{group_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseGroupsGroupId = <ThrowOnError extends boolean = false>(
  options: Options<GetUniverseGroupsGroupIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseGroupsGroupIdResponse,
    GetUniverseGroupsGroupIdError,
    ThrowOnError
  >({
    url: '/universe/groups/{group_id}/',
    ...options,
  });
};

/**
 * Bulk names to IDs
 * Resolve a set of names to IDs in the following categories: agents, alliances, characters, constellations, corporations factions, inventory_types, regions, stations, and systems. Only exact matches will be returned. All names searched for are cached for 12 hours
 *
 * ---
 * Alternate route: `/dev/universe/ids/`
 *
 * Alternate route: `/legacy/universe/ids/`
 *
 * Alternate route: `/v1/universe/ids/`
 *
 */
export const postUniverseIds = <ThrowOnError extends boolean = false>(
  options: Options<PostUniverseIdsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostUniverseIdsResponse,
    PostUniverseIdsError,
    ThrowOnError
  >({
    url: '/universe/ids/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get moon information
 * Get information on a moon
 *
 * ---
 * Alternate route: `/legacy/universe/moons/{moon_id}/`
 *
 * Alternate route: `/v1/universe/moons/{moon_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseMoonsMoonId = <ThrowOnError extends boolean = false>(
  options: Options<GetUniverseMoonsMoonIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseMoonsMoonIdResponse,
    GetUniverseMoonsMoonIdError,
    ThrowOnError
  >({
    url: '/universe/moons/{moon_id}/',
    ...options,
  });
};

/**
 * Get names and categories for a set of IDs
 * Resolve a set of IDs to names and categories. Supported ID's for resolving are: Characters, Corporations, Alliances, Stations, Solar Systems, Constellations, Regions, Types, Factions
 *
 * ---
 * Alternate route: `/dev/universe/names/`
 *
 * Alternate route: `/v3/universe/names/`
 *
 */
export const postUniverseNames = <ThrowOnError extends boolean = false>(
  options: Options<PostUniverseNamesData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostUniverseNamesResponse,
    PostUniverseNamesError,
    ThrowOnError
  >({
    url: '/universe/names/',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options?.headers,
    },
  });
};

/**
 * Get planet information
 * Get information on a planet
 *
 * ---
 * Alternate route: `/legacy/universe/planets/{planet_id}/`
 *
 * Alternate route: `/v1/universe/planets/{planet_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniversePlanetsPlanetId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniversePlanetsPlanetIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniversePlanetsPlanetIdResponse,
    GetUniversePlanetsPlanetIdError,
    ThrowOnError
  >({
    url: '/universe/planets/{planet_id}/',
    ...options,
  });
};

/**
 * Get character races
 * Get a list of character races
 *
 * ---
 * Alternate route: `/dev/universe/races/`
 *
 * Alternate route: `/legacy/universe/races/`
 *
 * Alternate route: `/v1/universe/races/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseRaces = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseRacesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseRacesResponse,
    GetUniverseRacesError,
    ThrowOnError
  >({
    url: '/universe/races/',
    ...options,
  });
};

/**
 * Get regions
 * Get a list of regions
 *
 * ---
 * Alternate route: `/legacy/universe/regions/`
 *
 * Alternate route: `/v1/universe/regions/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseRegions = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseRegionsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseRegionsResponse,
    GetUniverseRegionsError,
    ThrowOnError
  >({
    url: '/universe/regions/',
    ...options,
  });
};

/**
 * Get region information
 * Get information on a region
 *
 * ---
 * Alternate route: `/legacy/universe/regions/{region_id}/`
 *
 * Alternate route: `/v1/universe/regions/{region_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseRegionsRegionId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseRegionsRegionIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseRegionsRegionIdResponse,
    GetUniverseRegionsRegionIdError,
    ThrowOnError
  >({
    url: '/universe/regions/{region_id}/',
    ...options,
  });
};

/**
 * Get schematic information
 * Get information on a planetary factory schematic
 *
 * ---
 * Alternate route: `/dev/universe/schematics/{schematic_id}/`
 *
 * Alternate route: `/legacy/universe/schematics/{schematic_id}/`
 *
 * Alternate route: `/v1/universe/schematics/{schematic_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getUniverseSchematicsSchematicId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseSchematicsSchematicIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseSchematicsSchematicIdResponse,
    GetUniverseSchematicsSchematicIdError,
    ThrowOnError
  >({
    url: '/universe/schematics/{schematic_id}/',
    ...options,
  });
};

/**
 * Get stargate information
 * Get information on a stargate
 *
 * ---
 * Alternate route: `/legacy/universe/stargates/{stargate_id}/`
 *
 * Alternate route: `/v1/universe/stargates/{stargate_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseStargatesStargateId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseStargatesStargateIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseStargatesStargateIdResponse,
    GetUniverseStargatesStargateIdError,
    ThrowOnError
  >({
    url: '/universe/stargates/{stargate_id}/',
    ...options,
  });
};

/**
 * Get star information
 * Get information on a star
 *
 * ---
 * Alternate route: `/legacy/universe/stars/{star_id}/`
 *
 * Alternate route: `/v1/universe/stars/{star_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseStarsStarId = <ThrowOnError extends boolean = false>(
  options: Options<GetUniverseStarsStarIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseStarsStarIdResponse,
    GetUniverseStarsStarIdError,
    ThrowOnError
  >({
    url: '/universe/stars/{star_id}/',
    ...options,
  });
};

/**
 * Get station information
 * Get information on a station
 *
 * ---
 * Alternate route: `/dev/universe/stations/{station_id}/`
 *
 * Alternate route: `/v2/universe/stations/{station_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseStationsStationId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseStationsStationIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseStationsStationIdResponse,
    GetUniverseStationsStationIdError,
    ThrowOnError
  >({
    url: '/universe/stations/{station_id}/',
    ...options,
  });
};

/**
 * List all public structures
 * List all public structures
 *
 * ---
 * Alternate route: `/dev/universe/structures/`
 *
 * Alternate route: `/legacy/universe/structures/`
 *
 * Alternate route: `/v1/universe/structures/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getUniverseStructures = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseStructuresData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseStructuresResponse,
    GetUniverseStructuresError,
    ThrowOnError
  >({
    url: '/universe/structures/',
    ...options,
  });
};

/**
 * Get structure information
 * Returns information on requested structure if you are on the ACL. Otherwise, returns "Forbidden" for all inputs.
 *
 * ---
 * Alternate route: `/v2/universe/structures/{structure_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getUniverseStructuresStructureId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseStructuresStructureIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseStructuresStructureIdResponse,
    GetUniverseStructuresStructureIdError,
    ThrowOnError
  >({
    security: [
      {
        scheme: 'bearer',
        type: 'http',
      },
    ],
    url: '/universe/structures/{structure_id}/',
    ...options,
  });
};

/**
 * Get system jumps
 * Get the number of jumps in solar systems within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with jumps will be listed
 *
 * ---
 * Alternate route: `/legacy/universe/system_jumps/`
 *
 * Alternate route: `/v1/universe/system_jumps/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getUniverseSystemJumps = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseSystemJumpsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseSystemJumpsResponse,
    GetUniverseSystemJumpsError,
    ThrowOnError
  >({
    url: '/universe/system_jumps/',
    ...options,
  });
};

/**
 * Get system kills
 * Get the number of ship, pod and NPC kills per solar system within the last hour ending at the timestamp of the Last-Modified header, excluding wormhole space. Only systems with kills will be listed
 *
 * ---
 * Alternate route: `/v2/universe/system_kills/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getUniverseSystemKills = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseSystemKillsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseSystemKillsResponse,
    GetUniverseSystemKillsError,
    ThrowOnError
  >({
    url: '/universe/system_kills/',
    ...options,
  });
};

/**
 * Get solar systems
 * Get a list of solar systems
 *
 * ---
 * Alternate route: `/dev/universe/systems/`
 *
 * Alternate route: `/legacy/universe/systems/`
 *
 * Alternate route: `/v1/universe/systems/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseSystems = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseSystemsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseSystemsResponse,
    GetUniverseSystemsError,
    ThrowOnError
  >({
    url: '/universe/systems/',
    ...options,
  });
};

/**
 * Get solar system information
 * Get information on a solar system.
 *
 * ---
 * Alternate route: `/dev/universe/systems/{system_id}/`
 *
 * Alternate route: `/v4/universe/systems/{system_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseSystemsSystemId = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUniverseSystemsSystemIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseSystemsSystemIdResponse,
    GetUniverseSystemsSystemIdError,
    ThrowOnError
  >({
    url: '/universe/systems/{system_id}/',
    ...options,
  });
};

/**
 * Get types
 * Get a list of type ids
 *
 * ---
 * Alternate route: `/legacy/universe/types/`
 *
 * Alternate route: `/v1/universe/types/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseTypes = <ThrowOnError extends boolean = false>(
  options?: Options<GetUniverseTypesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUniverseTypesResponse,
    GetUniverseTypesError,
    ThrowOnError
  >({
    url: '/universe/types/',
    ...options,
  });
};

/**
 * Get type information
 * Get information on a type
 *
 * ---
 * Alternate route: `/dev/universe/types/{type_id}/`
 *
 * Alternate route: `/v3/universe/types/{type_id}/`
 *
 * ---
 * This route expires daily at 11:05
 */
export const getUniverseTypesTypeId = <ThrowOnError extends boolean = false>(
  options: Options<GetUniverseTypesTypeIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetUniverseTypesTypeIdResponse,
    GetUniverseTypesTypeIdError,
    ThrowOnError
  >({
    url: '/universe/types/{type_id}/',
    ...options,
  });
};

/**
 * List wars
 * Return a list of wars
 *
 * ---
 * Alternate route: `/dev/wars/`
 *
 * Alternate route: `/legacy/wars/`
 *
 * Alternate route: `/v1/wars/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getWars = <ThrowOnError extends boolean = false>(
  options?: Options<GetWarsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetWarsResponse,
    GetWarsError,
    ThrowOnError
  >({
    url: '/wars/',
    ...options,
  });
};

/**
 * Get war information
 * Return details about a war
 *
 * ---
 * Alternate route: `/dev/wars/{war_id}/`
 *
 * Alternate route: `/legacy/wars/{war_id}/`
 *
 * Alternate route: `/v1/wars/{war_id}/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getWarsWarId = <ThrowOnError extends boolean = false>(
  options: Options<GetWarsWarIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetWarsWarIdResponse,
    GetWarsWarIdError,
    ThrowOnError
  >({
    url: '/wars/{war_id}/',
    ...options,
  });
};

/**
 * List kills for a war
 * Return a list of kills related to a war
 *
 * ---
 * Alternate route: `/dev/wars/{war_id}/killmails/`
 *
 * Alternate route: `/legacy/wars/{war_id}/killmails/`
 *
 * Alternate route: `/v1/wars/{war_id}/killmails/`
 *
 * ---
 * This route is cached for up to 3600 seconds
 */
export const getWarsWarIdKillmails = <ThrowOnError extends boolean = false>(
  options: Options<GetWarsWarIdKillmailsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetWarsWarIdKillmailsResponse,
    GetWarsWarIdKillmailsError,
    ThrowOnError
  >({
    url: '/wars/{war_id}/killmails/',
    ...options,
  });
};
